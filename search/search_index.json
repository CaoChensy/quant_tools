{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"WisEcon","text":""},{"location":"#wisecon_1","title":"WisEcon\u200b\u662f\u200b\u4ec0\u4e48\u200b?","text":"<p>WisEcon \u200b\u662f\u200b\u4e00\u6b3e\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u91d1\u878d\u5e02\u573a\u200b\u7684\u200b\u91cf\u5316\u200b\u5206\u6790\u200b\u5de5\u5177\u200b\uff0c\u200b\u65e8\u5728\u200b\u4e3a\u200b\u6295\u8d44\u8005\u200b\u3001\u200b\u7814\u7a76\u200b\u4eba\u5458\u200b\u548c\u200b\u91d1\u878d\u200b\u5206\u6790\u5e08\u200b\u63d0\u4f9b\u200b\u5168\u9762\u200b\u7684\u200b\u6570\u636e\u5206\u6790\u200b\u548c\u200b\u51b3\u7b56\u200b\u652f\u6301\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5176\u200b\u4e3b\u8981\u200b\u7279\u70b9\u200b\u548c\u200b\u529f\u80fd\u200b\uff1a</p> <ol> <li> <p>\u200b\u6570\u636e\u200b\u652f\u6301\u200b WisEcon \u200b\u63d0\u4f9b\u200b\u591a\u79cd\u7c7b\u578b\u200b\u7684\u200b\u91d1\u878d\u200b\u6570\u636e\u200b\uff0c\u200b\u5305\u62ec\u200b</p> <ul> <li>\u200b\u80a1\u7968\u200b\u6570\u636e\u200b\uff1a\u200b\u5b9e\u65f6\u200b\u548c\u200b\u5386\u53f2\u200b\u80a1\u7968\u4ef7\u683c\u200b\u3001\u200b\u4ea4\u6613\u91cf\u200b\u3001\u200b\u8d22\u52a1\u62a5\u8868\u200b\u7b49\u200b\u3002</li> <li>\u200b\u57fa\u91d1\u200b\u6570\u636e\u200b\uff1a\u200b\u5404\u7c7b\u200b\u57fa\u91d1\u200b\u7684\u200b\u51c0\u503c\u200b\u3001\u200b\u6536\u76ca\u7387\u200b\u3001\u200b\u98ce\u9669\u200b\u6307\u6807\u200b\u7b49\u200b\u3002</li> <li>\u200b\u671f\u8d27\u200b\u6570\u636e\u200b\uff1a\u200b\u671f\u8d27\u200b\u5408\u7ea6\u200b\u7684\u200b\u4ef7\u683c\u200b\u3001\u200b\u6210\u4ea4\u91cf\u200b\u3001\u200b\u6301\u4ed3\u91cf\u200b\u7b49\u200b\u3002</li> <li>\u200b\u5b8f\u89c2\u7ecf\u6d4e\u200b\u6570\u636e\u200b\uff1a\u200b\u5305\u62ec\u200bGDP\u3001\u200b\u901a\u8d27\u81a8\u80c0\u7387\u200b\u3001\u200b\u5931\u4e1a\u7387\u200b\u7b49\u200b\u5173\u952e\u200b\u7ecf\u6d4e\u6307\u6807\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u5927\u200b\u6a21\u578b\u200b\u652f\u6301\u200b WisEcon \u200b\u96c6\u6210\u200b\u4e86\u200b ZLAI-Agent \u200b\u5de5\u5177\u200b\u94fe\u200b\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u5f3a\u5927\u200b\u7684\u200b\u4eba\u5de5\u667a\u80fd\u200b\u9a71\u52a8\u200b\u7684\u200b\u5206\u6790\u200b\u5de5\u5177\u200b\u3002 </p> <ul> <li>\u200b\u901a\u8fc7\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u548c\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\uff0cZLAI-Agent \u200b\u53ef\u4ee5\u200b\u6709\u6548\u200b\u5730\u200b\u5206\u6790\u200b\u6d77\u91cf\u200b\u6570\u636e\u200b\uff0c\u200b\u53d1\u6398\u200b\u6f5c\u5728\u200b\u7684\u200b\u6295\u8d44\u200b\u673a\u4f1a\u200b\uff0c\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u667a\u80fd\u5316\u200b\u7684\u200b\u5efa\u8bae\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u529f\u80fd\u200b\u7279\u70b9\u200b</p> <ul> <li>\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\uff1a\u200b\u76f4\u89c2\u200b\u7684\u200b\u56fe\u8868\u200b\u548c\u200b\u4eea\u8868\u76d8\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u5feb\u901f\u200b\u7406\u89e3\u200b\u6570\u636e\u200b\u8d8b\u52bf\u200b\u548c\u200b\u6a21\u5f0f\u200b\u3002 </li> <li>\u200b\u7b56\u7565\u200b\u56de\u6d4b\u200b\uff1a\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u5386\u53f2\u200b\u6570\u636e\u6d4b\u8bd5\u200b\u81ea\u5df1\u200b\u7684\u200b\u4ea4\u6613\u200b\u7b56\u7565\u200b\uff0c\u200b\u4ee5\u200b\u8bc4\u4f30\u200b\u5176\u200b\u6709\u6548\u6027\u200b\u3002 </li> <li>\u200b\u98ce\u9669\u7ba1\u7406\u200b\uff1a\u200b\u63d0\u4f9b\u200b\u591a\u79cd\u200b\u98ce\u9669\u200b\u8bc4\u4f30\u200b\u5de5\u5177\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u8bc6\u522b\u200b\u548c\u200b\u7ba1\u7406\u200b\u6295\u8d44\u200b\u98ce\u9669\u200b\u3002 </li> <li>\u200b\u5b9e\u65f6\u200b\u76d1\u63a7\u200b\uff1a\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u8b66\u62a5\u200b\uff0c\u200b\u5b9e\u65f6\u200b\u76d1\u63a7\u200b\u5e02\u573a\u200b\u53d8\u5316\u200b\uff0c\u200b\u53ca\u65f6\u200b\u4f5c\u51fa\u200b\u51b3\u7b56\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u5e94\u7528\u200b\u573a\u666f\u200b</p> <ul> <li>\u200b\u4e2a\u4eba\u200b\u6295\u8d44\u8005\u200b\uff1a\u200b\u5e2e\u52a9\u200b\u4e2a\u4eba\u200b\u6295\u8d44\u8005\u200b\u5236\u5b9a\u200b\u6295\u8d44\u200b\u7b56\u7565\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6295\u8d44\u200b\u56de\u62a5\u200b\u3002</li> <li>\u200b\u673a\u6784\u200b\u6295\u8d44\u8005\u200b\uff1a\u200b\u4e3a\u200b\u673a\u6784\u200b\u63d0\u4f9b\u200b\u6df1\u5165\u200b\u7684\u200b\u5e02\u573a\u200b\u5206\u6790\u200b\u548c\u200b\u9884\u6d4b\u200b\uff0c\u200b\u652f\u6301\u200b\u51b3\u7b56\u200b\u8fc7\u7a0b\u200b\u3002</li> <li>\u200b\u5b66\u672f\u7814\u7a76\u200b\uff1a\u200b\u4e3a\u200b\u91d1\u878d\u200b\u7814\u7a76\u200b\u4eba\u5458\u200b\u63d0\u4f9b\u200b\u4e30\u5bcc\u200b\u7684\u200b\u6570\u636e\u200b\u548c\u200b\u5206\u6790\u200b\u5de5\u5177\u200b\uff0c\u200b\u652f\u6301\u200b\u5b66\u672f\u7814\u7a76\u200b\u3002</li> </ul> </li> </ol>"},{"location":"#wisecon_2","title":"WisEcon\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b?","text":"<pre><code>pip install wisecon -U\n</code></pre>"},{"location":"api/macro/","title":"\u5b8f\u89c2\u7ecf\u6d4e\u200b(Editing)","text":""},{"location":"api/macro/#wisecon.macro.asset_invest.AssetInvestMapping","title":"AssetInvestMapping","text":""},{"location":"api/macro/#wisecon.macro.asset_invest.AssetInvest","title":"AssetInvest","text":"<pre><code>AssetInvest(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\asset_invest.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = AssetInvestMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u57ce\u9547\u200b\u56fa\u5b9a\u8d44\u4ea7\u200b\u6295\u8d44\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.boom_index.BoomIndexMapping","title":"BoomIndexMapping","text":""},{"location":"api/macro/#wisecon.macro.boom_index.BoomIndex","title":"BoomIndex","text":"<pre><code>BoomIndex(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\boom_index.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = BoomIndexMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e2d\u56fd\u200b \u200b\u4f01\u4e1a\u200b\u666f\u6c14\u200b\u53ca\u200b\u4f01\u4e1a\u5bb6\u200b\u4fe1\u5fc3\u200b\u6307\u6570\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.cpi.CPIMapping","title":"CPIMapping","text":""},{"location":"api/macro/#wisecon.macro.cpi.CPI","title":"CPI","text":"<pre><code>CPI(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\cpi.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = CPIMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5c45\u6c11\u6d88\u8d39\u200b\u4ef7\u683c\u6307\u6570\u200b(CPI\uff0c\u200b\u4e0a\u5e74\u200b\u540c\u6708\u200b=100)\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.currency_supply.CurrencySupplyMapping","title":"CurrencySupplyMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u8d27\u5e01\u200b\u4f9b\u5e94\u91cf\u200b</p>"},{"location":"api/macro/#wisecon.macro.currency_supply.CurrencySupply","title":"CurrencySupply","text":"<pre><code>CurrencySupply(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e2d\u56fd\u200b\u8d27\u5e01\u200b\u4f9b\u5e94\u91cf\u200b</p> Notes <pre><code>from wisecon.macro import *\ndata = CurrencySupply(size=20).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>size</code> <code>Optional[int]</code> <p>\u200b\u6700\u5927\u200b\u6570\u636e\u91cf\u200b</p> <code>20</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\macro\\currency_supply.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.macro import *\n        data = CurrencySupply(size=20).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        size: \u200b\u6700\u5927\u200b\u6570\u636e\u91cf\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.size = size\n    self.mapping = CurrencySupplyMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b\u8d27\u5e01\u200b\u4f9b\u5e94\u91cf\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.customs.CustomsMapping","title":"CustomsMapping","text":""},{"location":"api/macro/#wisecon.macro.customs.Customs","title":"Customs","text":"<pre><code>Customs(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\customs.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = CustomsMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u6d77\u5173\u200b\u8fdb\u51fa\u53e3\u200b\u589e\u51cf\u200b\u60c5\u51b5\u200b\u4e00\u89c8\u8868\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.deposit_rate.DepositRateMapping","title":"DepositRateMapping","text":""},{"location":"api/macro/#wisecon.macro.deposit_rate.DepositRate","title":"DepositRate","text":"<pre><code>DepositRate(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\deposit_rate.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = DepositRateMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5229\u7387\u200b\u8c03\u6574\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.deposit_reserve.DepositReserveMapping","title":"DepositReserveMapping","text":""},{"location":"api/macro/#wisecon.macro.deposit_reserve.DepositReserve","title":"DepositReserve","text":"<pre><code>DepositReserve(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\deposit_reserve.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = DepositReserveMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5b58\u6b3e\u200b\u51c6\u5907\u91d1\u7387\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.faith_index.FaithIndexMapping","title":"FaithIndexMapping","text":""},{"location":"api/macro/#wisecon.macro.faith_index.FaithIndex","title":"FaithIndex","text":"<pre><code>FaithIndex(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\faith_index.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = FaithIndexMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u6d88\u8d39\u8005\u200b\u4fe1\u5fc3\u200b\u6307\u6570\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.fdi.FDIMapping","title":"FDIMapping","text":""},{"location":"api/macro/#wisecon.macro.fdi.FDI","title":"FDI","text":"<pre><code>FDI(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u4e2d\u56fd\u200b \u200b\u5916\u5546\u200b\u76f4\u63a5\u200b\u6295\u8d44\u200b\u6570\u636e\u200b(FDI)</p> Source code in <code>wisecon\\macro\\fdi.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = FDIMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5916\u5546\u200b\u76f4\u63a5\u200b\u6295\u8d44\u200b\u6570\u636e\u200b(FDI)\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.forex_deposit.ForexDepositMapping","title":"ForexDepositMapping","text":""},{"location":"api/macro/#wisecon.macro.forex_deposit.ForexDeposit","title":"ForexDeposit","text":"<pre><code>ForexDeposit(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\forex_deposit.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = ForexDepositMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u672c\u200b\u5916\u5e01\u5b58\u6b3e\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.forex_loan.ForexLoanMapping","title":"ForexLoanMapping","text":""},{"location":"api/macro/#wisecon.macro.forex_loan.ForexLoan","title":"ForexLoan","text":"<pre><code>ForexLoan(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\forex_loan.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = ForexLoanMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5916\u6c47\u200b\u8d37\u6b3e\u200b\u6570\u636e\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.gdp.GDPMapping","title":"GDPMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b GDP</p>"},{"location":"api/macro/#wisecon.macro.gdp.GDP","title":"GDP","text":"<pre><code>GDP(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b GDP\uff08\u200b\u4e2d\u56fd\u200b\uff09</p> <p>Parameters:</p> Name Type Description Default <code>size</code> <code>Optional[int]</code> <p>\u200b\u6700\u5927\u200b\u6570\u636e\u91cf\u200b</p> <code>20</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from wisecon.macro import GDP\n&gt;&gt;&gt; data = GDP(size=20).load()\n&gt;&gt;&gt; data.to_frame(chinese_column=True)\n</code></pre> Source code in <code>wisecon\\macro\\gdp.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Args:\n        size: \u200b\u6700\u5927\u200b\u6570\u636e\u91cf\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n\n    Examples:\n        &gt;&gt;&gt; from wisecon.macro import GDP\n        &gt;&gt;&gt; data = GDP(size=20).load()\n        &gt;&gt;&gt; data.to_frame(chinese_column=True)\n    \"\"\"\n    self.size = size\n    self.mapping = GDPMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u56fd\u5185\u200b\u751f\u4ea7\u603b\u503c\u200b(GDP)\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.gold_currency.GoldCurrencyMapping","title":"GoldCurrencyMapping","text":""},{"location":"api/macro/#wisecon.macro.gold_currency.GoldCurrency","title":"GoldCurrency","text":"<pre><code>GoldCurrency(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\gold_currency.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = GoldCurrencyMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5916\u6c47\u200b\u548c\u200b\u9ec4\u91d1\u200b\u50a8\u5907\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.goodes_index.GoodsIndexMapping","title":"GoodsIndexMapping","text":""},{"location":"api/macro/#wisecon.macro.goodes_index.GoodsIndex","title":"GoodsIndex","text":"<pre><code>GoodsIndex(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\goodes_index.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = GoodsIndexMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u4f01\u4e1a\u200b\u5546\u54c1\u200b\u4ef7\u683c\u6307\u6570\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.gov_income.GovIncomeMapping","title":"GovIncomeMapping","text":""},{"location":"api/macro/#wisecon.macro.gov_income.GovIncome","title":"GovIncome","text":"<pre><code>GovIncome(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\gov_income.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = GovIncomeMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u8d22\u653f\u6536\u5165\u200b\uff08\u200b\u6bcf\u5e74\u200b2\u200b\u6708\u200b\u516c\u5e03\u200b\u5f53\u5e74\u200b1-2\u200b\u6708\u200b\u7d2f\u8ba1\u200b\u503c\u200b\uff09\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.hose_index.HoseIndexOldMapping","title":"HoseIndexOldMapping","text":""},{"location":"api/macro/#wisecon.macro.hose_index.HoseIndexOld","title":"HoseIndexOld","text":"<pre><code>HoseIndexOld(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\hose_index.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = HoseIndexOldMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u623f\u4ef7\u200b\u6307\u6570\u200b(08\u201410\u200b\u5e74\u200b)\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.hose_index.HoseIndexNewMapping","title":"HoseIndexNewMapping","text":""},{"location":"api/macro/#wisecon.macro.hose_index.HoseIndexNew","title":"HoseIndexNew","text":"<pre><code>HoseIndexNew(\n    cities: Optional[List[str]] = [\"\u200b\u5317\u4eac\u200b\", \"\u200b\u4e0a\u6d77\u200b\"],\n    report_date: Optional[str] = None,\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>:param query_config: :param cities: \u200b\u57ce\u5e02\u200b :param size: \u200b\u6570\u636e\u91cf\u200b :param report_date: \u200b\u65e5\u671f\u200b :param verbose: :param logger: :param kwargs:</p> Source code in <code>wisecon\\macro\\hose_index.py</code> <pre><code>def __init__(\n        self,\n        cities: Optional[List[str]] = [\"\u200b\u5317\u4eac\u200b\", \"\u200b\u4e0a\u6d77\u200b\"],\n        report_date: Optional[str] = None,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n\n    :param query_config:\n    :param cities: \u200b\u57ce\u5e02\u200b\n    :param size: \u200b\u6570\u636e\u91cf\u200b\n    :param report_date: \u200b\u65e5\u671f\u200b\n    :param verbose:\n    :param logger:\n    :param kwargs:\n    \"\"\"\n    self.cities = cities\n    self.report_date = report_date\n    self.size = size\n    self.mapping = HoseIndexNewMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u65b0\u200b\u623f\u4ef7\u200b\u6307\u6570\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.imp_intrestraten.ImpInterestMapping","title":"ImpInterestMapping","text":""},{"location":"api/macro/#wisecon.macro.imp_intrestraten.ImpInterest","title":"ImpInterest","text":"<pre><code>ImpInterest(\n    size: Optional[int] = 20,\n    market: Literal[\n        \"\u200b\u4e0a\u6d77\u200b\", \"\u200b\u4e2d\u56fd\u200b\", \"\u200b\u4f26\u6566\u200b\", \"\u200b\u6b27\u6d32\u200b\", \"\u200b\u9999\u6e2f\u200b\", \"\u200b\u65b0\u52a0\u5761\u200b\"\n    ] = \"\u200b\u4e0a\u6d77\u200b\",\n    currency_code: Literal[\n        \"CNY\", \"HKD\", \"USD\", \"GBP\", \"JPY\", \"EUR\", \"SGD\"\n    ] = \"CNY\",\n    indicator: Literal[\n        \"1d\", \"1w\", \"2w\", \"1m\", \"3m\", \"6m\", \"9m\", \"1y\"\n    ] = \"1d\",\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>:param size: :param currency_code: \u200b\u5e01\u79cd\u200b     [\"CNY\", \"HKD\", \"USD\", \"GBP\", \"JPY\", \"EUR\", \"SGD\"] :param market: \u200b\u5e02\u573a\u200b     {\"\u200b\u4e0a\u6d77\u200b\": \"001\", \"\u200b\u4e2d\u56fd\u200b\": \"002\", \"\u200b\u4f26\u6566\u200b\": \"003\", \"\u200b\u6b27\u6d32\u200b\": \"004\", \"\u200b\u9999\u6e2f\u200b\": \"005\", \"\u200b\u65b0\u52a0\u5761\u200b\": \"006\"} :param indicator: \u200b\u6307\u6807\u200b\u5468\u671f\u200b     {         \"1d\": \"001\",         \"1w\": \"101\", \"2w\": \"102\",         \"1m\": \"201\", \"2m\": \"202\", \"3m\": \"203\", \"4m\": \"204\", \"5m\": \"205\",         \"6m\": \"206\", \"7m\": \"207\", \"8m\": \"208\", \"9m\": \"209\", \"10m\": \"210\", \"11m\": \"211\",         \"1y\": \"301\",     } :param query_config: :param verbose: :param logger: :param kwargs:</p> Source code in <code>wisecon\\macro\\imp_intrestraten.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        market: Literal[\"\u200b\u4e0a\u6d77\u200b\", \"\u200b\u4e2d\u56fd\u200b\", \"\u200b\u4f26\u6566\u200b\", \"\u200b\u6b27\u6d32\u200b\", \"\u200b\u9999\u6e2f\u200b\", \"\u200b\u65b0\u52a0\u5761\u200b\"] = \"\u200b\u4e0a\u6d77\u200b\",\n        currency_code: Literal[\"CNY\", \"HKD\", \"USD\", \"GBP\", \"JPY\", \"EUR\", \"SGD\"] = \"CNY\",\n        indicator: Literal[\"1d\", \"1w\", \"2w\", \"1m\", \"3m\", \"6m\", \"9m\", \"1y\"] = \"1d\",\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    :param size:\n    :param currency_code: \u200b\u5e01\u79cd\u200b\n        [\"CNY\", \"HKD\", \"USD\", \"GBP\", \"JPY\", \"EUR\", \"SGD\"]\n    :param market: \u200b\u5e02\u573a\u200b\n        {\"\u200b\u4e0a\u6d77\u200b\": \"001\", \"\u200b\u4e2d\u56fd\u200b\": \"002\", \"\u200b\u4f26\u6566\u200b\": \"003\", \"\u200b\u6b27\u6d32\u200b\": \"004\", \"\u200b\u9999\u6e2f\u200b\": \"005\", \"\u200b\u65b0\u52a0\u5761\u200b\": \"006\"}\n    :param indicator: \u200b\u6307\u6807\u200b\u5468\u671f\u200b\n        {\n            \"1d\": \"001\",\n            \"1w\": \"101\", \"2w\": \"102\",\n            \"1m\": \"201\", \"2m\": \"202\", \"3m\": \"203\", \"4m\": \"204\", \"5m\": \"205\",\n            \"6m\": \"206\", \"7m\": \"207\", \"8m\": \"208\", \"9m\": \"209\", \"10m\": \"210\", \"11m\": \"211\",\n            \"1y\": \"301\",\n        }\n    :param query_config:\n    :param verbose:\n    :param logger:\n    :param kwargs:\n    \"\"\"\n    self.size = size\n    self.currency_code = currency_code\n    self.market = market\n    self.indicator = indicator\n    self.mapping = ImpInterestMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=description)\n</code></pre>"},{"location":"api/macro/#wisecon.macro.indus_grow.IndusGrowMapping","title":"IndusGrowMapping","text":""},{"location":"api/macro/#wisecon.macro.indus_grow.IndusGrow","title":"IndusGrow","text":"<pre><code>IndusGrow(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\indus_grow.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = IndusGrowMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5de5\u4e1a\u200b\u589e\u52a0\u503c\u200b\u589e\u957f\u200b \uff08\u200b\u6bcf\u5e74\u200b2\u200b\u6708\u200b\u516c\u5e03\u200b\u5f53\u5e74\u200b1-2\u200b\u6708\u200b\u7d2f\u8ba1\u200b\u503c\u200b\uff09\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.lpr.LPRMapping","title":"LPRMapping","text":""},{"location":"api/macro/#wisecon.macro.lpr.LPR","title":"LPR","text":"<pre><code>LPR(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\lpr.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = LPRMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b LPR\u200b\u54c1\u79cd\u200b\u8be6\u7ec6\u200b\u6570\u636e\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.new_loan.NewLoanQueryConfig","title":"NewLoanQueryConfig","text":""},{"location":"api/macro/#wisecon.macro.new_loan.NewLoan","title":"NewLoan","text":"<pre><code>NewLoan(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\new_loan.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = NewLoanQueryConfig()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u65b0\u589e\u200b\u4fe1\u8d37\u200b\u6570\u636e\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.oil_price.OilPriceMapping","title":"OilPriceMapping","text":""},{"location":"api/macro/#wisecon.macro.oil_price.OilPrice","title":"OilPrice","text":"<pre><code>OilPrice(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\oil_price.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = OilPriceMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u6c7d\u67f4\u6cb9\u200b\u5386\u53f2\u200b\u8c03\u4ef7\u200b\u4fe1\u606f\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.pmi.PMIMapping","title":"PMIMapping","text":""},{"location":"api/macro/#wisecon.macro.pmi.PMI","title":"PMI","text":"<pre><code>PMI(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u91c7\u8d2d\u200b\u7ecf\u7406\u4eba\u200b\u6307\u6570\u200b(PMI)</p> Source code in <code>wisecon\\macro\\pmi.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.verbose = verbose\n    self.mapping = PMIMapping()\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u91c7\u8d2d\u200b\u7ecf\u7406\u4eba\u200b\u6307\u6570\u200b(PMI)\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.ppi.PPIMapping","title":"PPIMapping","text":""},{"location":"api/macro/#wisecon.macro.ppi.PPI","title":"PPI","text":"<pre><code>PPI(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u4e2d\u56fd\u200b \u200b\u5de5\u4e1a\u54c1\u200b\u51fa\u5382\u4ef7\u683c\u200b\u6307\u6570\u200b(PPI)</p> Source code in <code>wisecon\\macro\\ppi.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = PPIMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5de5\u4e1a\u54c1\u200b\u51fa\u5382\u4ef7\u683c\u200b\u6307\u6570\u200b(PPI)\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.stock_open.StockOpenMapping","title":"StockOpenMapping","text":""},{"location":"api/macro/#wisecon.macro.stock_open.StockOpen","title":"StockOpen","text":"<pre><code>StockOpen(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\stock_open.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = StockOpenMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"json\",\n        description=\"\u200b\u4e2d\u56fd\u200b \u200b\u80a1\u7968\u200b\u8d26\u6237\u200b\u7edf\u8ba1\u200b\u8be6\u7ec6\u200b\u6570\u636e\u200b\",\n    )\n</code></pre>"},{"location":"api/macro/#wisecon.macro.stock_statistics.StockStatisticsMapping","title":"StockStatisticsMapping","text":""},{"location":"api/macro/#wisecon.macro.stock_statistics.StockStatistics","title":"StockStatistics","text":"<pre><code>StockStatistics(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\stock_statistics.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = StockStatisticsMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5168\u56fd\u200b\u80a1\u7968\u4ea4\u6613\u200b\u7edf\u8ba1\u8868\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.tax.TaxMapping","title":"TaxMapping","text":""},{"location":"api/macro/#wisecon.macro.tax.Tax","title":"Tax","text":"<pre><code>Tax(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\tax.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = TaxMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u5168\u56fd\u200b\u7a0e\u6536\u6536\u5165\u200b\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.total_retail.TotalRetailMapping","title":"TotalRetailMapping","text":""},{"location":"api/macro/#wisecon.macro.total_retail.TotalRetail","title":"TotalRetail","text":"<pre><code>TotalRetail(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\total_retail.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = TotalRetailMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u793e\u4f1a\u200b\u6d88\u8d39\u54c1\u200b\u96f6\u552e\u603b\u989d\u200b \uff08\u200b\u6bcf\u5e74\u200b2\u200b\u6708\u200b\u516c\u5e03\u200b\u5f53\u5e74\u200b1-2\u200b\u6708\u200b\u7d2f\u8ba1\u200b\u503c\u200b\uff09\")\n</code></pre>"},{"location":"api/macro/#wisecon.macro.transfer_fund.TransferFundMapping","title":"TransferFundMapping","text":""},{"location":"api/macro/#wisecon.macro.transfer_fund.TransferFund","title":"TransferFund","text":"<pre><code>TransferFund(\n    size: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> Source code in <code>wisecon\\macro\\transfer_fund.py</code> <pre><code>def __init__(\n        self,\n        size: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    self.size = size\n    self.mapping = TransferFundMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2d\u56fd\u200b \u200b\u4ea4\u6613\u200b\u7ed3\u7b97\u200b\u8d44\u91d1\u200b(\u200b\u94f6\u8bc1\u200b\u8f6c\u8d26\u200b) \u200b\u636e\u200b\u6295\u4fdd\u200b\u57fa\u91d1\u200b\u516c\u53f8\u200b2017\u200b\u5e74\u200b7\u200b\u6708\u200b31\u200b\u65e5\u200b\u516c\u544a\u200b\uff0c\u200b\u8be5\u200b\u6570\u636e\u200b\u5df2\u200b\u505c\u6b62\u200b\u66f4\u65b0\u200b\u3002\")\n</code></pre>"},{"location":"api/etf/etf/","title":"ETF(Editing)","text":""},{"location":"api/etf/etf/#wisecon.etf.market.ETFMarketMapping","title":"ETFMarketMapping","text":""},{"location":"api/etf/etf/#wisecon.etf.market.ETFMarket","title":"ETFMarket","text":"<pre><code>ETFMarket(\n    market: Optional[List[str]] = None,\n    sort_by: Optional[str] = \"f3\",\n    limit: Optional[int] = 100,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>ERF Market</p> Source code in <code>wisecon\\etf\\market.py</code> <pre><code>def __init__(\n        self,\n        market: Optional[List[str]] = None,\n        sort_by: Optional[str] = \"f3\",\n        limit: Optional[int] = 100,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\"\"\"\n    self.market = market\n    self.sort_by = sort_by\n    self.limit = limit\n    self.mapping = ETFMarketMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"ETF \u200b\u5e02\u573a\u200b\")\n</code></pre>"},{"location":"api/fund/value/","title":"\u516c\u52df\u200b\u57fa\u91d1\u200b(Editing)","text":""},{"location":"api/fund/value/#wisecon.fund.fund_base.FundBaseMapping","title":"FundBaseMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u57fa\u91d1\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b</p>"},{"location":"api/fund/value/#wisecon.fund.fund_base.FundBase","title":"FundBase","text":"<pre><code>FundBase(\n    fund_code: str,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u57fa\u91d1\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b</p> Notes <pre><code>from wisecon.fund.fund_value import FundValue\n\ndata = FundValue(fund_code=\"000001\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>fund_code</code> <code>str</code> <p>\u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b</p> required <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\fund\\fund_base.py</code> <pre><code>def __init__(\n        self,\n        fund_code: str,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.fund.fund_value import FundValue\n\n        data = FundValue(fund_code=\"000001\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        fund_code: \u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.fund_code = fund_code\n    self.mapping = FundBaseMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"text\", description=\"\u200b\u57fa\u91d1\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\",)\n</code></pre>"},{"location":"api/fund/value/#wisecon.fund.fund_list.FundListMapping","title":"FundListMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u5168\u90e8\u200b\u57fa\u91d1\u200b\u5217\u8868\u200b</p>"},{"location":"api/fund/value/#wisecon.fund.fund_list.FundList","title":"FundList","text":"<pre><code>FundList(\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u5168\u90e8\u200b\u57fa\u91d1\u200b\u5217\u8868\u200b</p> Notes <pre><code>from wisecon.fund import *\n\ndata = FundList().load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\fund\\fund_list.py</code> <pre><code>def __init__(\n        self,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.fund import *\n\n        data = FundList().load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.mapping = FundListMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(\n        response_type=\"text\",\n        description=\"\u200b\u57fa\u91d1\u200b\u5217\u8868\u200b\",\n    )\n</code></pre>"},{"location":"api/fund/value/#wisecon.fund.fund_value.FundValueMapping","title":"FundValueMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u57fa\u91d1\u200b\u5f53\u524d\u200b\u51c0\u503c\u200b</p>"},{"location":"api/fund/value/#wisecon.fund.fund_value.FundValue","title":"FundValue","text":"<pre><code>FundValue(\n    fund_code: str,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u57fa\u91d1\u200b\u5f53\u524d\u200b\u51c0\u503c\u200b</p> Notes <pre><code>from wisecon.fund.fund_value import FundValue\n\ndata = FundValue(fund_code=\"000001\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>fund_code</code> <code>str</code> <p>\u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b</p> required <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\fund\\fund_value.py</code> <pre><code>def __init__(\n        self,\n        fund_code: str,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.fund.fund_value import FundValue\n\n        data = FundValue(fund_code=\"000001\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        fund_code: \u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.fund_code = fund_code\n    self.mapping = FundValueMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n\n    self.request_set(\n        response_type=\"text\",\n        description=\"\u200b\u57fa\u91d1\u200b\u5f53\u524d\u200b\u51c0\u503c\u200b\",\n    )\n</code></pre>"},{"location":"api/fund/value/#wisecon.fund.fund_hist.FundHistMapping","title":"FundHistMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u57fa\u91d1\u200b\u5386\u53f2\u200b\u51c0\u503c\u200b</p>"},{"location":"api/fund/value/#wisecon.fund.fund_hist.FundHist","title":"FundHist","text":"<pre><code>FundHist(\n    fund_code: str,\n    start_date: Optional[str] = \"\",\n    end_date: Optional[str] = \"\",\n    limit: Optional[int] = 20,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u57fa\u91d1\u200b\u5386\u53f2\u200b\u51c0\u503c\u200b</p> Notes <pre><code>from wisecon.fund import FundHist\n\ndata = FundHist(fund_code=\"000001\", start_date=\"2020-01-01\", end_date=\"2024-01-01\", limit=10).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>fund_code</code> <code>str</code> <p>\u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b</p> required <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>''</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>''</code> <code>limit</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>20</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\fund\\fund_hist.py</code> <pre><code>def __init__(\n        self,\n        fund_code: str,\n        start_date: Optional[str] = \"\",\n        end_date: Optional[str] = \"\",\n        limit: Optional[int] = 20,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.fund import FundHist\n\n        data = FundHist(fund_code=\"000001\", start_date=\"2020-01-01\", end_date=\"2024-01-01\", limit=10).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        fund_code: \u200b\u57fa\u91d1\u200b\u4ee3\u7801\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        limit: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.fund_code = fund_code\n    self.start_date = start_date\n    self.end_date = end_date\n    self.limit = limit\n    self.mapping = FundHistMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"text\", description=\"\u200b\u57fa\u91d1\u200b\u5386\u53f2\u200b\u51c0\u503c\u200b\", other_headers=other_headers)\n</code></pre>"},{"location":"api/stock/capital_flow/","title":"\u8d44\u91d1\u6d41\u200b(Editing)","text":""},{"location":"api/stock/capital_flow/#wisecon.stock.capital_flow.plate.PlateFlowMapping","title":"PlateFlowMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u677f\u5757\u200b\uff08\u200b\u884c\u4e1a\u200b\u3001\u200b\u6982\u5ff5\u200b\u3001\u200b\u5730\u533a\u200b\uff09\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b</p>"},{"location":"api/stock/capital_flow/#wisecon.stock.capital_flow.plate.PlateFlow","title":"PlateFlow","text":"<pre><code>PlateFlow(\n    plate: Optional[\n        Literal[\"\u200b\u884c\u4e1a\u200b\", \"\u200b\u6982\u5ff5\u200b\", \"\u200b\u5730\u533a\u200b\"]\n    ] = \"\u200b\u884c\u4e1a\u200b\",\n    size: Optional[int] = 50,\n    sort_by: Optional[str] = None,\n    days: Optional[Literal[1, 3, 5, 10]] = 1,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u677f\u5757\u200b\uff08\u200b\u884c\u4e1a\u200b\u3001\u200b\u6982\u5ff5\u200b\u3001\u200b\u5730\u533a\u200b\uff09\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b</p> Notes <pre><code>\u200b\u6307\u6807\u200b\u5b9a\u4e49\u200b\n\u3000\u3000- \u200b\u8d85\u5927\u200b\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b50\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b100\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u5927\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b10\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b20\u200b\u4e07\u5143\u200b\u4e14\u200b\u5c0f\u4e8e\u200b50\u200b\u4e07\u80a1\u200b\u548c\u200b100\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u4e2d\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b4\u200b\u4e07\u5143\u200b\u4e14\u200b\u5c0f\u4e8e\u200b10\u200b\u4e07\u80a1\u200b\u548c\u200b20\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u5c0f\u5355\u200b\uff1a\u200b\u5c0f\u4e8e\u200b2\u200b\u4e07\u80a1\u200b\u548c\u200b4\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u6d41\u5165\u200b\uff1a\u200b\u4e70\u5165\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- \u200b\u6d41\u51fa\u200b\uff1a\u200b\u5356\u51fa\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- \u200b\u4e3b\u529b\u200b\u6d41\u5165\u200b\uff1a\u200b\u8d85\u5927\u200b\u5355\u200b\u52a0\u5927\u200b\u5355\u200b\u4e70\u5165\u200b\u6210\u4ea4\u989d\u200b\u4e4b\u200b\u548c\u200b;\n\u3000\u3000- \u200b\u4e3b\u529b\u200b\u6d41\u51fa\u200b\uff1a\u200b\u8d85\u5927\u200b\u5355\u200b\u52a0\u5927\u200b\u5355\u200b\u5356\u51fa\u200b\u6210\u4ea4\u989d\u200b\u4e4b\u200b\u548c\u200b;\n\u3000\u3000- \u200b\u51c0\u989d\u200b\uff1a\u200b\u6d41\u5165\u200b-\u200b\u6d41\u51fa\u200b;\n\u3000\u3000- \u200b\u51c0\u6bd4\u200b\uff1a(\u200b\u6d41\u5165\u200b-\u200b\u6d41\u51fa\u200b)/\u200b\u603b\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- 5\u200b\u65e5\u200b\u6392\u540d\u200b\uff1a5\u200b\u65e5\u200b\u4e3b\u529b\u200b\u51c0\u200b\u5360\u200b\u6bd4\u200b\u6392\u540d\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b5\u200b\u65e5\u200b);\n\u3000\u3000- 5\u200b\u65e5\u200b\u6da8\u8dcc\u200b\uff1a\u200b\u6700\u8fd1\u200b5\u200b\u65e5\u200b\u6da8\u8dcc\u5e45\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b5\u200b\u65e5\u200b);\n\u3000\u3000- 10\u200b\u65e5\u200b\u6392\u540d\u200b\uff1a10\u200b\u65e5\u200b\u4e3b\u529b\u200b\u51c0\u200b\u5360\u200b\u6bd4\u200b\u6392\u540d\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b10\u200b\u65e5\u200b);\n\u3000\u3000- 10\u200b\u65e5\u200b\u6da8\u8dcc\u200b\uff1a\u200b\u6700\u8fd1\u200b10\u200b\u65e5\u200b\u6da8\u8dcc\u5e45\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b10\u200b\u65e5\u200b);\n</code></pre> Notes <pre><code>from wisecon.stock.capital_flow import *\n\ndata = PlateFlow(days=1).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>plate</code> <code>Optional[Literal['\u200b\u884c\u4e1a\u200b', '\u200b\u6982\u5ff5\u200b', '\u200b\u5730\u533a\u200b']]</code> <p>\u200b\u677f\u5757\u200b\u540d\u79f0\u200b, <code>[\"\u200b\u884c\u4e1a\u200b\", \"\u200b\u6982\u5ff5\u200b\", \"\u200b\u5730\u533a\u200b\"]</code></p> <code>'\u200b\u884c\u4e1a\u200b'</code> <code>days</code> <code>Optional[Literal[1, 3, 5, 10]]</code> <p>\u200b\u7edf\u8ba1\u200b\u5929\u6570\u200b <code>1, 3, 5, 10</code></p> <code>1</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6570\u636e\u91cf\u200b</p> <code>50</code> <code>sort_by</code> <code>Optional[str]</code> <p>\u200b\u6392\u5e8f\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b, \u200b\u53ef\u200b\u901a\u8fc7\u200b<code>StockFlowMapping</code>\u200b\u67e5\u8be2\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\u51fd\u6570\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\capital_flow\\plate.py</code> <pre><code>def __init__(\n        self,\n        plate: Optional[Literal[\"\u200b\u884c\u4e1a\u200b\", \"\u200b\u6982\u5ff5\u200b\", \"\u200b\u5730\u533a\u200b\"]] = \"\u200b\u884c\u4e1a\u200b\",\n        size: Optional[int] = 50,\n        sort_by: Optional[str] = None,\n        days: Optional[Literal[1, 3, 5, 10]] = 1,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.capital_flow import *\n\n        data = PlateFlow(days=1).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        plate: \u200b\u677f\u5757\u200b\u540d\u79f0\u200b, `[\"\u200b\u884c\u4e1a\u200b\", \"\u200b\u6982\u5ff5\u200b\", \"\u200b\u5730\u533a\u200b\"]`\n        days: \u200b\u7edf\u8ba1\u200b\u5929\u6570\u200b `1, 3, 5, 10`\n        size: \u200b\u8fd4\u56de\u200b\u6570\u636e\u91cf\u200b\n        sort_by: \u200b\u6392\u5e8f\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b, \u200b\u53ef\u200b\u901a\u8fc7\u200b`StockFlowMapping`\u200b\u67e5\u8be2\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\u51fd\u6570\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.plate = plate\n    self.size = size\n    self.sort_by = sort_by\n    self.days = days\n    self.mapping = PlateFlowMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u677f\u5757\u200b\uff08\u200b\u884c\u4e1a\u200b\u3001\u200b\u6982\u5ff5\u200b\u3001\u200b\u5730\u533a\u200b\uff09\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b\", )\n</code></pre>"},{"location":"api/stock/capital_flow/#wisecon.stock.capital_flow.stock.StockFlowMapping","title":"StockFlowMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e2a\u80a1\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b</p>"},{"location":"api/stock/capital_flow/#wisecon.stock.capital_flow.stock.StockFlow","title":"StockFlow","text":"<pre><code>StockFlow(\n    market: Optional[TypeMarketCode] = None,\n    days: Optional[Literal[1, 3, 5, 10]] = 1,\n    size: Optional[int] = 50,\n    sort_by: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e2a\u80a1\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b</p> Notes <pre><code>\u200b\u6307\u6807\u200b\u5b9a\u4e49\u200b\n\u3000\u3000- \u200b\u8d85\u5927\u200b\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b50\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b100\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u5927\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b10\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b20\u200b\u4e07\u5143\u200b\u4e14\u200b\u5c0f\u4e8e\u200b50\u200b\u4e07\u80a1\u200b\u548c\u200b100\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u4e2d\u5355\u200b\uff1a\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u4e07\u80a1\u200b\u6216\u8005\u200b4\u200b\u4e07\u5143\u200b\u4e14\u200b\u5c0f\u4e8e\u200b10\u200b\u4e07\u80a1\u200b\u548c\u200b20\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u5c0f\u5355\u200b\uff1a\u200b\u5c0f\u4e8e\u200b2\u200b\u4e07\u80a1\u200b\u548c\u200b4\u200b\u4e07\u5143\u200b\u7684\u200b\u6210\u4ea4\u200b\u5355\u200b;\n\u3000\u3000- \u200b\u6d41\u5165\u200b\uff1a\u200b\u4e70\u5165\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- \u200b\u6d41\u51fa\u200b\uff1a\u200b\u5356\u51fa\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- \u200b\u4e3b\u529b\u200b\u6d41\u5165\u200b\uff1a\u200b\u8d85\u5927\u200b\u5355\u200b\u52a0\u5927\u200b\u5355\u200b\u4e70\u5165\u200b\u6210\u4ea4\u989d\u200b\u4e4b\u200b\u548c\u200b;\n\u3000\u3000- \u200b\u4e3b\u529b\u200b\u6d41\u51fa\u200b\uff1a\u200b\u8d85\u5927\u200b\u5355\u200b\u52a0\u5927\u200b\u5355\u200b\u5356\u51fa\u200b\u6210\u4ea4\u989d\u200b\u4e4b\u200b\u548c\u200b;\n\u3000\u3000- \u200b\u51c0\u989d\u200b\uff1a\u200b\u6d41\u5165\u200b-\u200b\u6d41\u51fa\u200b;\n\u3000\u3000- \u200b\u51c0\u6bd4\u200b\uff1a(\u200b\u6d41\u5165\u200b-\u200b\u6d41\u51fa\u200b)/\u200b\u603b\u200b\u6210\u4ea4\u989d\u200b;\n\u3000\u3000- 5\u200b\u65e5\u200b\u6392\u540d\u200b\uff1a5\u200b\u65e5\u200b\u4e3b\u529b\u200b\u51c0\u200b\u5360\u200b\u6bd4\u200b\u6392\u540d\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b5\u200b\u65e5\u200b);\n\u3000\u3000- 5\u200b\u65e5\u200b\u6da8\u8dcc\u200b\uff1a\u200b\u6700\u8fd1\u200b5\u200b\u65e5\u200b\u6da8\u8dcc\u5e45\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b5\u200b\u65e5\u200b);\n\u3000\u3000- 10\u200b\u65e5\u200b\u6392\u540d\u200b\uff1a10\u200b\u65e5\u200b\u4e3b\u529b\u200b\u51c0\u200b\u5360\u200b\u6bd4\u200b\u6392\u540d\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b10\u200b\u65e5\u200b);\n\u3000\u3000- 10\u200b\u65e5\u200b\u6da8\u8dcc\u200b\uff1a\u200b\u6700\u8fd1\u200b10\u200b\u65e5\u200b\u6da8\u8dcc\u5e45\u200b\uff08\u200b\u6307\u200b\u5927\u76d8\u200b\u8fde\u7eed\u200b\u4ea4\u6613\u200b\u7684\u200b10\u200b\u65e5\u200b);\n</code></pre> Notes <pre><code>from wisecon.stock.capital_flow import *\n\ndata = StockFlow(days=1).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>Optional[TypeMarketCode]</code> <p>\u200b\u5e02\u573a\u200b\u540d\u79f0\u200b <code>[\"\u200b\u5168\u90e8\u200b\u80a1\u7968\u200b\", \"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u6caa\u5e02\u200bB\u200b\u80a1\u200b\", \"\u200b\u6df1\u5e02\u200bB\u200b\u80a1\u200b\"]</code></p> <code>None</code> <code>days</code> <code>Optional[Literal[1, 3, 5, 10]]</code> <p>\u200b\u7edf\u8ba1\u200b\u5929\u6570\u200b <code>1, 3, 5, 10</code></p> <code>1</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6570\u636e\u91cf\u200b</p> <code>50</code> <code>sort_by</code> <code>Optional[str]</code> <p>\u200b\u6392\u5e8f\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b, \u200b\u53ef\u200b\u901a\u8fc7\u200b<code>StockFlowMapping</code>\u200b\u67e5\u8be2\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\u51fd\u6570\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\capital_flow\\stock.py</code> <pre><code>def __init__(\n        self,\n        market: Optional[TypeMarketCode] = None,\n        days: Optional[Literal[1, 3, 5, 10]] = 1,\n        size: Optional[int] = 50,\n        sort_by: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.capital_flow import *\n\n        data = StockFlow(days=1).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        market: \u200b\u5e02\u573a\u200b\u540d\u79f0\u200b `[\"\u200b\u5168\u90e8\u200b\u80a1\u7968\u200b\", \"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u6caa\u5e02\u200bB\u200b\u80a1\u200b\", \"\u200b\u6df1\u5e02\u200bB\u200b\u80a1\u200b\"]`\n        days: \u200b\u7edf\u8ba1\u200b\u5929\u6570\u200b `1, 3, 5, 10`\n        size: \u200b\u8fd4\u56de\u200b\u6570\u636e\u91cf\u200b\n        sort_by: \u200b\u6392\u5e8f\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b, \u200b\u53ef\u200b\u901a\u8fc7\u200b`StockFlowMapping`\u200b\u67e5\u8be2\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\u51fd\u6570\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.market = market\n    self.days = days\n    self.size = size\n    self.sort_by = sort_by\n    self.mapping = StockFlowMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u4e2a\u80a1\u200b\u8d44\u91d1\u200b\u6d41\u5411\u200b\u5386\u53f2\u6570\u636e\u200b\", )\n</code></pre>"},{"location":"api/stock/constituent_stock/","title":"\u6210\u5206\u80a1","text":""},{"location":"api/stock/constituent_stock/#wisecon.stock.index.index.IndexStockMapping","title":"IndexStockMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u6307\u6570\u200b\u6210\u5206\u80a1\u200b\u6570\u636e\u200b</p>"},{"location":"api/stock/constituent_stock/#wisecon.stock.index.index.IndexStock","title":"IndexStock","text":"<pre><code>IndexStock(\n    index_name: Optional[\n        Literal[\"\u200b\u6caa\u200b\u6df1\u200b300\", \"\u200b\u4e0a\u8bc1\u200b50\", \"\u200b\u4e2d\u8bc1\u200b500\", \"\u200b\u79d1\u521b\u200b50\"]\n    ] = None,\n    size: Optional[int] = 50,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u6307\u6570\u200b\u6210\u5206\u80a1\u200b\u6570\u636e\u200b</p> Notes <pre><code>from wisecon.stock.index import *\n\ndata = IndexStock(index_name=\"\u200b\u6caa\u200b\u6df1\u200b300\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>index_name</code> <code>Optional[Literal['\u200b\u6caa\u200b\u6df1\u200b300', '\u200b\u4e0a\u8bc1\u200b50', '\u200b\u4e2d\u8bc1\u200b500', '\u200b\u79d1\u521b\u200b50']]</code> <p>\u200b\u6307\u6570\u200b\u540d\u79f0\u200b<code>[\"\u200b\u6caa\u200b\u6df1\u200b300\", \"\u200b\u4e0a\u8bc1\u200b50\", \"\u200b\u4e2d\u8bc1\u200b500\", \"\u200b\u79d1\u521b\u200b50\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\index\\index.py</code> <pre><code>def __init__(\n        self,\n        index_name: Optional[Literal[\"\u200b\u6caa\u200b\u6df1\u200b300\", \"\u200b\u4e0a\u8bc1\u200b50\", \"\u200b\u4e2d\u8bc1\u200b500\", \"\u200b\u79d1\u521b\u200b50\"]] = None,\n        size: Optional[int] = 50,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.index import *\n\n        data = IndexStock(index_name=\"\u200b\u6caa\u200b\u6df1\u200b300\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        index_name: \u200b\u6307\u6570\u200b\u540d\u79f0\u200b`[\"\u200b\u6caa\u200b\u6df1\u200b300\", \"\u200b\u4e0a\u8bc1\u200b50\", \"\u200b\u4e2d\u8bc1\u200b500\", \"\u200b\u79d1\u521b\u200b50\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.index_name = index_name\n    self.size = size\n    self.mapping = IndexStockMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u6307\u6570\u200b\u6210\u5206\u80a1\u200b\u6570\u636e\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/","title":"\u4e0a\u5e02\u516c\u53f8\u200b\u8d22\u52a1\u62a5\u8868","text":""},{"location":"api/stock/financial/#wisecon.stock.financial.balance.StockBalanceMapping","title":"StockBalanceMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.balance.StockBalance","title":"StockBalance","text":"<pre><code>StockBalance(\n    security_code: Optional[str] = None,\n    market: Optional[TypeMarket] = None,\n    industry_name: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b</p> Notes <pre><code>from wisecon.stock.financial import StockBalance\n\ndata = StockBalance(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>market</code> <code>Optional[TypeMarket]</code> <p>\u200b\u5e02\u573a\u200b: <code>[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]</code></p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\balance.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        market: Optional[TypeMarket] = None,\n        industry_name: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import StockBalance\n\n        data = StockBalance(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        market: \u200b\u5e02\u573a\u200b: `[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]`\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.market = market\n    self.industry_name = industry_name\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = StockBalanceMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b\")\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.cash.StockCashFlowMapping","title":"StockCashFlowMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.cash.StockCashFlow","title":"StockCashFlow","text":"<pre><code>StockCashFlow(\n    security_code: Optional[str] = None,\n    market: Optional[TypeMarket] = None,\n    industry_name: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b</p> Notes <pre><code>from wisecon.stock.financial import StockCashFlow\n\ndata = StockCashFlow(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>market</code> <code>Optional[TypeMarket]</code> <p>\u200b\u5e02\u573a\u200b: <code>[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]</code></p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\cash.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        market: Optional[TypeMarket] = None,\n        industry_name: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import StockCashFlow\n\n        data = StockCashFlow(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        market: \u200b\u5e02\u573a\u200b: `[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]`\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.market = market\n    self.industry_name = industry_name\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = StockCashFlowMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u8d44\u4ea7\u8d1f\u503a\u200b\u62a5\u8868\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.dividend.StockDividendMapping","title":"StockDividendMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5206\u7ea2\u200b\u6570\u636e\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.dividend.StockDividend","title":"StockDividend","text":"<pre><code>StockDividend(\n    security_code: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5206\u7ea2\u200b\u6570\u636e\u200b</p> Notes <pre><code>from wisecon.stock.financial import StockDividend\n\ndata = StockDividend(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\dividend.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import StockDividend\n\n        data = StockDividend(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = StockDividendMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5206\u7ea2\u200b\u6570\u636e\u200b\")\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.income.StockIncomeMapping","title":"StockIncomeMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5229\u6da6\u200b\u62a5\u8868\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.income.StockIncome","title":"StockIncome","text":"<pre><code>StockIncome(\n    security_code: Optional[str] = None,\n    market: Optional[TypeMarket] = None,\n    industry_name: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5229\u6da6\u200b\u62a5\u8868\u200b</p> Notes <pre><code>from wisecon.stock.financial import StockIncome\n\ndata = StockIncome(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>market</code> <code>Optional[TypeMarket]</code> <p>\u200b\u5e02\u573a\u200b: <code>[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]</code></p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\income.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        market: Optional[TypeMarket] = None,\n        industry_name: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import StockIncome\n\n        data = StockIncome(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        market: \u200b\u5e02\u573a\u200b: `[\"\u200b\u6caa\u200b\u6df1\u200bA\u200b\u80a1\u200b\", \"\u200b\u6caa\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u79d1\u521b\u677f\u200b\", \"\u200b\u6df1\u5e02\u200bA\u200b\u80a1\u200b\", \"\u200b\u521b\u4e1a\u677f\u200b\", \"\u200b\u4eac\u200b\u5e02\u200bA\u200b\u80a1\u200b\"]`\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.market = market\n    self.industry_name = industry_name\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = StockIncomeMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5229\u6da6\u200b\u62a5\u8868\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn.EarnMapping","title":"EarnMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn.Earn","title":"Earn","text":"<pre><code>Earn(\n    security_code: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    industry_name: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b</p> Notes <pre><code>from wisecon.stock.financial import Earn\n\ndata = Earn(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\earn.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        industry_name: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import Earn\n\n        data = Earn(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.industry_name = industry_name\n    self.mapping = EarnMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn_fast.EarnFastMapping","title":"EarnFastMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn_fast.EarnFast","title":"EarnFast","text":"<pre><code>EarnFast(\n    security_code: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    industry_name: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b</p> Notes <pre><code>from wisecon.stock.financial import EarnFast\n\ndata = EarnFast(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\earn_fast.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        industry_name: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import EarnFast\n\n        data = EarnFast(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.industry_name = industry_name\n    self.mapping = EarnFastMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u62a5\u8868\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn_forecast.EarnForcastMapping","title":"EarnForcastMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u9884\u544a\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.earn_forecast.EarnForcast","title":"EarnForcast","text":"<pre><code>EarnForcast(\n    security_code: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    forcast_state: Optional[\n        Literal[\"reduction\", \"increase\"]\n    ] = None,\n    predict_finance: Optional[\n        Literal[\n            \"\u200b\u5f52\u6bcd\u200b\u51c0\u5229\u6da6\u200b\",\n            \"\u200b\u6263\u975e\u200b\u51c0\u5229\u6da6\u200b\",\n            \"\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\",\n            \"\u200b\u8425\u4e1a\u200b\u603b\u6536\u5165\u200b\",\n        ]\n    ] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u9884\u544a\u200b</p> Notes <pre><code>from wisecon.stock.financial import EarnForcast\n\ndata = EarnForcast(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>forcast_state</code> <code>Optional[Literal['reduction', 'increase']]</code> <p>\u200b\u9884\u6d4b\u200b\u72b6\u6001\u200b <code>[\"reduction\", \"increase\"]</code></p> <code>None</code> <code>predict_finance</code> <code>Optional[Literal['\u200b\u5f52\u6bcd\u200b\u51c0\u5229\u6da6\u200b', '\u200b\u6263\u975e\u200b\u51c0\u5229\u6da6\u200b', '\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b', '\u200b\u8425\u4e1a\u200b\u603b\u6536\u5165\u200b']]</code> <p>\u200b\u9884\u6d4b\u200b\u6307\u6807\u200b <code>[\"\u200b\u5f52\u6bcd\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6263\u975e\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\", \"\u200b\u8425\u4e1a\u200b\u603b\u6536\u5165\u200b\"]</code></p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\earn_forecast.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        forcast_state: Optional[Literal[\"reduction\", \"increase\"]] = None,\n        predict_finance: Optional[Literal[\"\u200b\u5f52\u6bcd\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6263\u975e\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\", \"\u200b\u8425\u4e1a\u200b\u603b\u6536\u5165\u200b\"]] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import EarnForcast\n\n        data = EarnForcast(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        forcast_state: \u200b\u9884\u6d4b\u200b\u72b6\u6001\u200b `[\"reduction\", \"increase\"]`\n        predict_finance: \u200b\u9884\u6d4b\u200b\u6307\u6807\u200b `[\"\u200b\u5f52\u6bcd\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6263\u975e\u200b\u51c0\u5229\u6da6\u200b\", \"\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\", \"\u200b\u8425\u4e1a\u200b\u603b\u6536\u5165\u200b\"]`\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.forcast_state = forcast_state\n    self.predict_finance = predict_finance\n    self.mapping = EarnForcastMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u200b\u516c\u53f8\u4e1a\u7ee9\u200b\u9884\u544a\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/financial/#wisecon.stock.financial.scheduled.ScheduledDisclosureMapping","title":"ScheduledDisclosureMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u9884\u7ea6\u200b\u62ab\u9732\u200b\u65f6\u95f4\u200b</p>"},{"location":"api/stock/financial/#wisecon.stock.financial.scheduled.ScheduledDisclosure","title":"ScheduledDisclosure","text":"<pre><code>ScheduledDisclosure(\n    security_code: Optional[str] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    industry_name: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u9884\u7ea6\u200b\u62ab\u9732\u200b\u65f6\u95f4\u200b</p> Notes <pre><code>from wisecon.stock.financial import ScheduledDisclosure\n\ndata = ScheduledDisclosure(date=\"2024-09-30\", size=5).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>industry_name</code> <code>Optional[str]</code> <p>\u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\financial\\scheduled.py</code> <pre><code>def __init__(\n        self,\n        security_code: Optional[str] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        industry_name: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.financial import ScheduledDisclosure\n\n        data = ScheduledDisclosure(date=\"2024-09-30\", size=5).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        security_code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        industry_name: \u200b\u884c\u4e1a\u200b\u540d\u79f0\u200b\n        size: \u200b\u6570\u636e\u200b\u6761\u200b\u6570\u636e\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.security_code = security_code\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.industry_name = industry_name\n    self.mapping = ScheduledDisclosureMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u9884\u7ea6\u200b\u62ab\u9732\u200b\u65f6\u95f4\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/","title":"\u80a1\u4e1c\u200b\u5206\u6790","text":""},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder.FreeHolderMapping","title":"FreeHolderMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder.FreeHolder","title":"FreeHolder","text":"<pre><code>FreeHolder(\n    holder_name: Optional[str] = None,\n    security_code: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = FreeHolder(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u80a1\u7968\u4ee3\u7801\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\free_holder.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        security_code: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = FreeHolder(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        security_code: \u200b\u80a1\u7968\u4ee3\u7801\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.security_code = security_code\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = FreeHolderMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_change.FreeHolderChangeMapping","title":"FreeHolderChangeMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_change.FreeHolderChange","title":"FreeHolderChange","text":"<pre><code>FreeHolderChange(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = FreeHolderChange(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\free_holder_change.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = FreeHolderChange(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = FreeHolderChangeMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_stock.FreeHolderStockMapping","title":"FreeHolderStockMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_stock.FreeHolderStock","title":"FreeHolderStock","text":"<pre><code>FreeHolderStock(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = FreeHolderStock(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\free_holder_stock.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = FreeHolderStock(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = FreeHolderStockMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u6301\u80a1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_stock_analysis.FreeHolderStockAnalysisMapping","title":"FreeHolderStockAnalysisMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_stock_analysis.FreeHolderStockAnalysis","title":"FreeHolderStockAnalysis","text":"<pre><code>FreeHolderStockAnalysis(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = FreeHolderStockAnalysis(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u53d8\u52a8\u200b\u65b9\u5411\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\free_holder_stock_analysis.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = FreeHolderStockAnalysis(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u53d8\u52a8\u200b\u65b9\u5411\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = FreeHolderStockAnalysisMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_coop.FreeHolderCoopMapping","title":"FreeHolderCoopMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.free_holder_coop.FreeHolderCoop","title":"FreeHolderCoop","text":"<pre><code>FreeHolderCoop(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    size: Optional[int] = 50,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = FreeHolderCoop(size=20).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\free_holder_coop.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        size: Optional[int] = 50,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = FreeHolderCoop(size=20).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.size = size\n    self.mapping = FreeHolderCoopMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u6d41\u901a\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder.HolderMapping","title":"HolderMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder.Holder","title":"Holder","text":"<pre><code>Holder(\n    holder_name: Optional[str] = None,\n    security_code: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = Holder(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>security_code</code> <code>Optional[str]</code> <p>\u200b\u80a1\u7968\u4ee3\u7801\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\holder.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        security_code: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = Holder(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        security_code: \u200b\u80a1\u7968\u4ee3\u7801\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.security_code = security_code\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = HolderMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u660e\u7ec6\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_change.HolderChangeMapping","title":"HolderChangeMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_change.HolderChange","title":"HolderChange","text":"<pre><code>HolderChange(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = HolderChange(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\holder_change.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = HolderChange(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = HolderChangeMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b\u7edf\u8ba1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_stock.HolderStockMapping","title":"HolderStockMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_stock.HolderStock","title":"HolderStock","text":"<pre><code>HolderStock(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = HolderStock(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\holder_stock.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = HolderStock(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u6301\u80a1\u200b\u53d8\u52a8\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = HolderStockMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_stock_analysis.HolderStockAnalysisMapping","title":"HolderStockAnalysisMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_stock_analysis.HolderStockAnalysis","title":"HolderStockAnalysis","text":"<pre><code>HolderStockAnalysis(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    holder_change: Optional[\n        Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]\n    ] = None,\n    size: Optional[int] = 50,\n    start_date: Optional[str] = None,\n    end_date: Optional[str] = None,\n    date: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = HolderStockAnalysis(size=20, start_date=\"2024-09-30\").load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>holder_change</code> <code>Optional[Literal['\u200b\u65b0\u8fdb\u200b', '\u200b\u589e\u52a0\u200b', '\u200b\u4e0d\u53d8\u200b', '\u200b\u51cf\u5c11\u200b']]</code> <p>\u200b\u53d8\u52a8\u200b\u65b9\u5411\u200b <code>[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u6761\u6570\u200b</p> <code>50</code> <code>start_date</code> <code>Optional[str]</code> <p>\u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>end_date</code> <code>Optional[str]</code> <p>\u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>date</code> <code>Optional[str]</code> <p>\u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u5668\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\holder_stock_analysis.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        holder_change: Optional[Literal[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]] = None,\n        size: Optional[int] = 50,\n        start_date: Optional[str] = None,\n        end_date: Optional[str] = None,\n        date: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = HolderStockAnalysis(size=20, start_date=\"2024-09-30\").load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        holder_change: \u200b\u53d8\u52a8\u200b\u65b9\u5411\u200b `[\"\u200b\u65b0\u8fdb\u200b\", \"\u200b\u589e\u52a0\u200b\", \"\u200b\u4e0d\u53d8\u200b\", \"\u200b\u51cf\u5c11\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u6761\u6570\u200b\n        start_date: \u200b\u5f00\u59cb\u200b\u65e5\u671f\u200b\n        end_date: \u200b\u7ed3\u675f\u200b\u65e5\u671f\u200b\n        date: \u200b\u6307\u5b9a\u200b\u65e5\u671f\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u5668\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.holder_change = holder_change\n    self.size = size\n    self.start_date = start_date\n    self.end_date = end_date\n    self.date = date\n    self.mapping = HolderStockAnalysisMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u6301\u80a1\u200b\u7edf\u8ba1\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_coop.HolderCoopMapping","title":"HolderCoopMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b</p>"},{"location":"api/stock/holder/#wisecon.stock.holder.holder_coop.HolderCoop","title":"HolderCoop","text":"<pre><code>HolderCoop(\n    holder_name: Optional[str] = None,\n    holder_type: Optional[\n        Literal[\n            \"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"\n        ]\n    ] = None,\n    size: Optional[int] = 50,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b</p> Notes <pre><code>from wisecon.stock.holder import *\n\ndata = HolderCoop(size=20).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>holder_name</code> <code>Optional[str]</code> <p>\u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b</p> <code>None</code> <code>holder_type</code> <code>Optional[Literal['\u200b\u4e2a\u4eba\u200b', '\u200b\u57fa\u91d1\u200b', 'QFII', '\u200b\u793e\u4fdd\u200b', '\u200b\u5238\u5546\u200b', '\u200b\u4fe1\u6258\u200b']]</code> <p>\u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b <code>[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]</code></p> <code>None</code> <code>size</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6761\u6570\u200b</p> <code>50</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\holder\\holder_coop.py</code> <pre><code>def __init__(\n        self,\n        holder_name: Optional[str] = None,\n        holder_type: Optional[Literal[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]] = None,\n        size: Optional[int] = 50,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.holder import *\n\n        data = HolderCoop(size=20).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        holder_name: \u200b\u80a1\u4e1c\u200b\u540d\u79f0\u200b\n        holder_type: \u200b\u80a1\u4e1c\u200b\u7c7b\u578b\u200b `[\"\u200b\u4e2a\u4eba\u200b\", \"\u200b\u57fa\u91d1\u200b\", \"QFII\", \"\u200b\u793e\u4fdd\u200b\", \"\u200b\u5238\u5546\u200b\", \"\u200b\u4fe1\u6258\u200b\"]`\n        size: \u200b\u8fd4\u56de\u200b\u6761\u6570\u200b\n        verbose: \u200b\u662f\u5426\u200b\u663e\u793a\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u81ea\u5b9a\u4e49\u200b\u65e5\u5fd7\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.holder_name = holder_name\n    self.holder_type = holder_type\n    self.size = size\n    self.mapping = HolderCoopMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(response_type=\"json\", description=\"\u200b\u4e0a\u5e02\u516c\u53f8\u200b\u5341\u5927\u200b\u80a1\u4e1c\u200b\u80a1\u4e1c\u200b\u534f\u540c\u200b\")\n    self.conditions = []\n</code></pre>"},{"location":"api/stock/kline/","title":"KLine","text":""},{"location":"api/stock/kline/#wisecon.stock.kline.kline.KLineMapping","title":"KLineMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u80a1\u7968\u200b-KLine</p>"},{"location":"api/stock/kline/#wisecon.stock.kline.kline.KLine","title":"KLine","text":"<pre><code>KLine(\n    code: Optional[str] = None,\n    end: Optional[str] = \"20500101\",\n    limit: Optional[int] = 120,\n    period: Optional[TypePeriod] = \"5min\",\n    adjust: Optional[\n        Literal[\"\u200b\u524d\u200b\u590d\u6743\u200b\", \"\u200b\u540e\u200b\u8d4b\u6743\u200b\", \"\u200b\u4e0d\u200b\u8d4b\u6743\u200b\"]\n    ] = \"\u200b\u524d\u200b\u590d\u6743\u200b\",\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u80a1\u7968\u200b-KLine</p> Notes <pre><code>from wisecon.stock.kline import KLine\n\ndata = KLine(code=\"300069\", end=\"20240910\", period=\"1day\", limit=9).load()\ndata.to_frame(chinese_column=True)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>Optional[str]</code> <p>\u200b\u80a1\u7968\u4ee3\u7801\u200b</p> <code>None</code> <code>end</code> <code>Optional[str]</code> <p>\u200b\u622a\u6b62\u200b\u65e5\u671f\u200b</p> <code>'20500101'</code> <code>limit</code> <code>Optional[int]</code> <p>\u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u6761\u6570\u200b</p> <code>120</code> <code>period</code> <code>Optional[TypePeriod]</code> <p>K\u200b\u7ebf\u200b\u5468\u671f\u200b<code>[\"1min\", \"5min\", \"15min\", \"30min\", \"60min\", \"1day\", \"1week\", \"1month\"]</code></p> <code>'5min'</code> <code>adjust</code> <code>Optional[Literal['\u200b\u524d\u200b\u590d\u6743\u200b', '\u200b\u540e\u200b\u8d4b\u6743\u200b', '\u200b\u4e0d\u200b\u8d4b\u6743\u200b']]</code> <p>\u200b\u590d\u6743\u200b\u7c7b\u578b\u200b<code>[\"\u200b\u524d\u200b\u590d\u6743\u200b\", \"\u200b\u540e\u200b\u8d4b\u6743\u200b\", \"\u200b\u4e0d\u200b\u8d4b\u6743\u200b\"]</code></p> <code>'\u200b\u524d\u200b\u590d\u6743\u200b'</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\kline\\kline.py</code> <pre><code>def __init__(\n        self,\n        code: Optional[str] = None,\n        end: Optional[str] = \"20500101\",\n        limit: Optional[int] = 120,\n        period: Optional[TypePeriod] = \"5min\",\n        adjust: Optional[Literal[\"\u200b\u524d\u200b\u590d\u6743\u200b\", \"\u200b\u540e\u200b\u8d4b\u6743\u200b\", \"\u200b\u4e0d\u200b\u8d4b\u6743\u200b\"]] = \"\u200b\u524d\u200b\u590d\u6743\u200b\",\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.kline import KLine\n\n        data = KLine(code=\"300069\", end=\"20240910\", period=\"1day\", limit=9).load()\n        data.to_frame(chinese_column=True)\n        ```\n\n    Args:\n        code: \u200b\u80a1\u7968\u4ee3\u7801\u200b\n        end: \u200b\u622a\u6b62\u200b\u65e5\u671f\u200b\n        limit: \u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u6761\u6570\u200b\n        period: K\u200b\u7ebf\u200b\u5468\u671f\u200b`[\"1min\", \"5min\", \"15min\", \"30min\", \"60min\", \"1day\", \"1week\", \"1month\"]`\n        adjust: \u200b\u590d\u6743\u200b\u7c7b\u578b\u200b`[\"\u200b\u524d\u200b\u590d\u6743\u200b\", \"\u200b\u540e\u200b\u8d4b\u6743\u200b\", \"\u200b\u4e0d\u200b\u8d4b\u6743\u200b\"]`\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u5bf9\u8c61\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.code = code\n    self.end = end\n    self.limit = limit\n    self.period = period\n    self.adjust = adjust\n    self.mapping = KLineMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u80a1\u7968\u200b-KLine\")\n</code></pre>"},{"location":"api/stock/performance/","title":"\u80a1\u7968\u200b\u4e1a\u7ee9\u200b\u6570\u636e","text":""},{"location":"api/stock/performance/#_2","title":"\u80a1\u7968\u200b\u4e1a\u7ee9","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nstock = StockPerformance(industry=\"\u200b\u917f\u9152\u200b\u884c\u4e1a\u200b\", quarter=\"2024Q1\", size=10)\ndata = stock.load_data()\nprint(data.metadata)\nprint(data.to_frame(columns=data.metadata.get(\"columns\")).to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <ul> <li><code>SECURITY_CODE</code>: <code>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</code></li> <li><code>SECURITY_NAME_ABBR</code>: <code>\u200b\u8bc1\u5238\u200b\u7b80\u79f0\u200b</code></li> <li><code>TRADE_MARKET_CODE</code>: <code>\u200b\u4ea4\u6613\u5e02\u573a\u200b\u4ee3\u7801\u200b</code></li> <li><code>TRADE_MARKET</code>: <code>\u200b\u4ea4\u6613\u5e02\u573a\u200b</code></li> <li><code>SECURITY_TYPE_CODE</code>: <code>\u200b\u8bc1\u5238\u200b\u7c7b\u578b\u200b\u4ee3\u7801\u200b</code></li> <li><code>SECURITY_TYPE</code>: <code>\u200b\u8bc1\u5238\u200b\u7c7b\u578b\u200b</code></li> <li><code>UPDATE_DATE</code>: <code>\u200b\u66f4\u65b0\u200b\u65e5\u671f\u200b</code></li> <li><code>REPORTDATE</code>: <code>\u200b\u62a5\u544a\u200b\u65e5\u671f\u200b</code></li> <li><code>BASIC_EPS</code>: <code>\u200b\u57fa\u672c\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b</code></li> <li><code>DEDUCT_BASIC_EPS</code>: <code>\u200b\u6263\u9664\u200b\u540e\u200b\u7684\u200b\u57fa\u672c\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b</code></li> <li><code>TOTAL_OPERATE_INCOME</code>: <code>\u200b\u603b\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b</code></li> <li><code>PARENT_NETPROFIT</code>: <code>\u200b\u6bcd\u516c\u53f8\u200b\u51c0\u5229\u6da6\u200b</code></li> <li><code>WEIGHTAVG_ROE</code>: <code>\u200b\u52a0\u6743\u200b\u5e73\u5747\u200b\u51c0\u8d44\u4ea7\u200b\u6536\u76ca\u7387\u200b</code></li> <li><code>YSTZ</code>: <code>\u200b\u9884\u8ba1\u200b\u6295\u8d44\u200b</code></li> <li><code>SJLTZ</code>: <code>\u200b\u5b9e\u9645\u200b\u6295\u8d44\u200b</code></li> <li><code>BPS</code>: <code>\u200b\u6bcf\u80a1\u200b\u51c0\u8d44\u4ea7\u200b</code></li> <li><code>MGJYXJJE</code>: <code>\u200b\u6bcf\u80a1\u200b\u7ecf\u8425\u200b\u73b0\u91d1\u6d41\u91cf\u200b</code></li> <li><code>XSMLL</code>: <code>\u200b\u9500\u552e\u200b\u6bdb\u5229\u7387\u200b</code></li> <li><code>YSHZ</code>: <code>\u200b\u9884\u8ba1\u200b\u6536\u76ca\u200b\u56de\u62a5\u200b</code></li> <li><code>SJLHZ</code>: <code>\u200b\u5b9e\u9645\u200b\u5229\u6da6\u200b\u56de\u62a5\u200b</code></li> <li><code>ASSIGNDSCRPT</code>: <code>\u200b\u5206\u914d\u200b\u63cf\u8ff0\u200b</code></li> <li><code>PAYYEAR</code>: <code>\u200b\u5206\u914d\u200b\u5e74\u5ea6\u200b</code></li> <li><code>PUBLISHNAME</code>: <code>\u200b\u53d1\u5e03\u200b\u540d\u79f0\u200b</code></li> <li><code>ZXGXL</code>: <code>\u200b\u6700\u65b0\u200b\u516c\u544a\u200b</code></li> <li><code>NOTICE_DATE</code>: <code>\u200b\u516c\u544a\u200b\u65e5\u671f\u200b</code></li> <li><code>ORG_CODE</code>: <code>\u200b\u673a\u6784\u200b\u4ee3\u7801\u200b</code></li> <li><code>TRADE_MARKET_ZJG</code>: <code>\u200b\u4ea4\u6613\u5e02\u573a\u200b\u6307\u6807\u200b</code></li> <li><code>ISNEW</code>: <code>\u200b\u662f\u5426\u200b\u65b0\u200b\u6570\u636e\u200b</code></li> <li><code>QDATE</code>: <code>\u200b\u62a5\u544a\u200b\u5b63\u5ea6\u200b</code></li> <li><code>DATATYPE</code>: <code>\u200b\u6570\u636e\u7c7b\u578b\u200b</code></li> <li><code>DATAYEAR</code>: <code>\u200b\u6570\u636e\u200b\u5e74\u5ea6\u200b</code></li> <li><code>DATEMMDD</code>: <code>\u200b\u6570\u636e\u200b\u6708\u4efd\u200b\u65e5\u671f\u200b</code></li> <li><code>EITIME</code>: <code>\u200b\u5bfc\u51fa\u200b\u65f6\u95f4\u200b</code></li> <li><code>SECUCODE</code>: <code>\u200b\u8bc1\u5238\u200b\u4ee3\u53f7\u200b</code></li> </ul> <pre><code>|    |   \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b | \u200b\u8bc1\u5238\u200b\u7b80\u79f0\u200b   |   \u200b\u4ea4\u6613\u5e02\u573a\u200b\u4ee3\u7801\u200b | \u200b\u4ea4\u6613\u5e02\u573a\u200b   |   \u200b\u8bc1\u5238\u200b\u7c7b\u578b\u200b\u4ee3\u7801\u200b | \u200b\u8bc1\u5238\u200b\u7c7b\u578b\u200b   | \u200b\u66f4\u65b0\u200b\u65e5\u671f\u200b            | \u200b\u62a5\u544a\u200b\u65e5\u671f\u200b            |   \u200b\u57fa\u672c\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b | \u200b\u6263\u9664\u200b\u540e\u200b\u7684\u200b\u57fa\u672c\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b   |   \u200b\u603b\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b |   \u200b\u6bcd\u516c\u53f8\u200b\u51c0\u5229\u6da6\u200b |   \u200b\u52a0\u6743\u200b\u5e73\u5747\u200b\u51c0\u8d44\u4ea7\u200b\u6536\u76ca\u7387\u200b |   \u200b\u9884\u8ba1\u200b\u6295\u8d44\u200b |   \u200b\u5b9e\u9645\u200b\u6295\u8d44\u200b |   \u200b\u6bcf\u80a1\u200b\u51c0\u8d44\u4ea7\u200b |   \u200b\u6bcf\u80a1\u200b\u7ecf\u8425\u200b\u73b0\u91d1\u6d41\u91cf\u200b |   \u200b\u9500\u552e\u200b\u6bdb\u5229\u7387\u200b |   \u200b\u9884\u8ba1\u200b\u6536\u76ca\u200b\u56de\u62a5\u200b |   \u200b\u5b9e\u9645\u200b\u5229\u6da6\u200b\u56de\u62a5\u200b | \u200b\u5206\u914d\u200b\u63cf\u8ff0\u200b   | \u200b\u5206\u914d\u200b\u5e74\u5ea6\u200b   | \u200b\u53d1\u5e03\u200b\u540d\u79f0\u200b   | \u200b\u6700\u65b0\u200b\u516c\u544a\u200b   | \u200b\u516c\u544a\u200b\u65e5\u671f\u200b            |   \u200b\u673a\u6784\u200b\u4ee3\u7801\u200b |   \u200b\u4ea4\u6613\u5e02\u573a\u200b\u6307\u6807\u200b |   \u200b\u662f\u5426\u200b\u65b0\u200b\u6570\u636e\u200b | \u200b\u62a5\u544a\u200b\u5b63\u5ea6\u200b   | \u200b\u6570\u636e\u7c7b\u578b\u200b      |   \u200b\u6570\u636e\u200b\u5e74\u5ea6\u200b | \u200b\u6570\u636e\u200b\u6708\u4efd\u200b\u65e5\u671f\u200b   | \u200b\u5bfc\u51fa\u200b\u65f6\u95f4\u200b            | \u200b\u8bc1\u5238\u200b\u4ee3\u53f7\u200b   |\n|---:|-----------:|:-----------|---------------:|:-----------|---------------:|:-----------|:--------------------|:--------------------|---------------:|:-----------------------|-------------:|---------------:|-----------------------:|-----------:|-----------:|-------------:|-------------------:|-------------:|---------------:|---------------:|:-----------|:-----------|:-----------|:-----------|:--------------------|-----------:|---------------:|-------------:|:-----------|:--------------|-----------:|:---------------|:--------------------|:-----------|\n|  0 |     600519 | \u200b\u8d35\u5dde\u200b\u8305\u53f0\u200b   |   069001001001 | \u200b\u4e0a\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-27 00:00:00 | 2024-03-31 00:00:00 |        19.16   |                        |  4.64847e+10 |    2.40653e+10 |                  10.57 |   18.0436  |      15.73 |     190.839  |           7.31367  |      92.6133 |         2.7414 |        10.0989 |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-27 00:00:00 |   10002602 |           0101 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-26 20:38:18 | 600519.SH  |\n|  1 |     000596 | \u200b\u53e4\u4e95\u200b\u8d21\u9152\u200b   |   069001002001 | \u200b\u6df1\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-27 00:00:00 | 2024-03-31 00:00:00 |         3.91   |                        |  8.28632e+09 |    2.06584e+09 |                   9.16 |   25.8539  |      31.61 |      44.5978 |           4.64249  |      80.3496 |        92.6667 |       166.035  |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-27 00:00:00 |   10005537 |           0201 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-27 01:18:19 | 000596.SZ  |\n|  2 |     200596 | \u200b\u53e4\u4e95\u200b\u8d21\u200bB    |   069001002001 | \u200b\u6df1\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001002 | B\u200b\u80a1\u200b        | 2024-04-27 00:00:00 | 2024-03-31 00:00:00 |         3.91   |                        |  8.28632e+09 |    2.06584e+09 |                   9.16 |   25.8539  |      31.61 |      44.5978 |           4.64249  |      80.3496 |        92.6667 |       166.035  |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-27 00:00:00 |   10005537 |           0220 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-27 01:18:19 | 200596.SZ  |\n|  3 |     002304 | \u200b\u6d0b\u6cb3\u200b\u80a1\u4efd\u200b   |   069001002001 | \u200b\u6df1\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-27 00:00:00 | 2024-03-31 00:00:00 |         4.0195 |                        |  1.62549e+10 |    6.05523e+09 |                  11.02 |    8.03329 |       5.02 |      38.4947 |           3.21981  |      76.0349 |       471.714  |      3328.78   |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-27 00:00:00 |   10096578 |           0201 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-27 01:21:56 | 002304.SZ  |\n|  4 |     000858 | \u200b\u4e94\u7cae\u6db2\u200b     |   069001002001 | \u200b\u6df1\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-29 00:00:00 | 2024-03-31 00:00:00 |         3.618  |                        |  3.48329e+10 |    1.40451e+10 |                  10.28 |   11.8631  |      11.98 |      36.9958 |           0.132985 |      78.4264 |        67.9854 |        90.374  |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-29 00:00:00 |   10005740 |           0201 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-28 16:19:24 | 000858.SZ  |\n|  5 |     000568 | \u200b\u6cf8\u5dde\u200b\u8001\u7a96\u200b   |   069001002001 | \u200b\u6df1\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-27 00:00:00 | 2024-03-31 00:00:00 |         3.12   |                        |  9.1884e+09  |    4.57395e+09 |                  10.43 |   20.7387  |      23.2  |      31.4069 |           2.96159  |      88.3724 |        10.8294 |        70.6524 |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-27 00:00:00 |   10005514 |           0201 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-27 01:19:21 | 000568.SZ  |\n|  6 |     600809 | \u200b\u5c71\u897f\u6c7e\u9152\u200b   |   069001001001 | \u200b\u4e0a\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-26 00:00:00 | 2024-03-31 00:00:00 |         5.13   |                        |  1.53381e+10 |    6.26243e+09 |                  20.22 |   20.9394  |      29.95 |      27.9493 |           5.7716   |      77.4609 |       195.873  |       521.945  |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-26 00:00:00 |   10634767 |           0101 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-25 18:54:52 | 600809.SH  |\n|  7 |     600702 | \u200b\u820d\u5f97\u200b\u9152\u4e1a\u200b   |   069001001001 | \u200b\u4e0a\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-26 00:00:00 | 2024-03-31 00:00:00 |         1.6632 |                        |  2.10543e+09 |    5.50283e+08 |                   7.01 |    4.13391 |      -3.35 |      23.0275 |           0.325411 |      74.1585 |        14.6969 |        15.5688 |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-26 00:00:00 |   10004012 |           0101 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-25 17:36:54 | 600702.SH  |\n|  8 |     600600 | \u200b\u9752\u5c9b\u200b\u5564\u9152\u200b   |   069001001001 | \u200b\u4e0a\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-30 00:00:00 | 2024-03-31 00:00:00 |         1.175  |                        |  1.015e+10   |    1.59724e+09 |                   5.65 |   -5.19482 |      10.06 |      21.3074 |           2.09146  |      40.4406 |       243.083  |       349.626  |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-30 00:00:00 |   10002658 |           0101 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-29 16:58:46 | 600600.SH  |\n|  9 |     603589 | \u200b\u53e3\u5b50\u200b\u7a96\u200b     |   069001001001 | \u200b\u4e0a\u4ea4\u6240\u200b\u4e3b\u677f\u200b |      058001001 | A\u200b\u80a1\u200b        | 2024-04-30 00:00:00 | 2024-03-31 00:00:00 |         0.98   |                        |  1.7675e+09  |    5.8932e+08  |                   5.87 |   11.0524  |      10.02 |      17.2103 |          -0.173267 |      76.4818 |        16.5629 |        58.0885 |            |            | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   |            | 2024-04-30 00:00:00 |   10276866 |           0101 |            0 | 2024Q1     | 2024\u200b\u5e74\u200b \u200b\u4e00\u200b\u5b63\u62a5\u200b |       2024 | \u200b\u4e00\u200b\u5b63\u62a5\u200b         | 2024-04-29 18:18:12 | 603589.SH  |\n</code></pre>"},{"location":"api/stock/tick/","title":"Tick","text":""},{"location":"api/stock/tick/#wisecon.stock.tick.tick.TickMapping","title":"TickMapping","text":"<p>\u200b\u5b57\u200b\u6bb5\u200b\u6620\u5c04\u200b \u200b\u80a1\u7968\u200b\u5b9e\u65f6\u200btick\u200b\u6570\u636e\u200b</p>"},{"location":"api/stock/tick/#wisecon.stock.tick.tick.Tick","title":"Tick","text":"<pre><code>Tick(\n    code: Optional[str] = None,\n    verbose: Optional[bool] = False,\n    logger: Optional[Callable] = None,\n    **kwargs: Any\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b \u200b\u80a1\u7968\u200b\u5b9e\u65f6\u200btick\u200b\u6570\u636e\u200b</p> Notes <pre><code>from wisecon.stock.tick import Tick\n\ndata = Tick(code=\"301618\").load()\nprint(data.to_frame(chinese_column=True))\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>Optional[str]</code> <p>\u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b</p> <code>None</code> <code>verbose</code> <code>Optional[bool]</code> <p>\u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b</p> <code>False</code> <code>logger</code> <code>Optional[Callable]</code> <p>\u200b\u65e5\u5fd7\u200b\u6253\u5370\u51fd\u6570\u200b</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b</p> <code>{}</code> Source code in <code>wisecon\\stock\\tick\\tick.py</code> <pre><code>def __init__(\n        self,\n        code: Optional[str] = None,\n        verbose: Optional[bool] = False,\n        logger: Optional[Callable] = None,\n        **kwargs: Any\n):\n    \"\"\"\n    Notes:\n        ```python\n        from wisecon.stock.tick import Tick\n\n        data = Tick(code=\"301618\").load()\n        print(data.to_frame(chinese_column=True))\n        ```\n\n    Args:\n        code: \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b\n        verbose: \u200b\u662f\u5426\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\n        logger: \u200b\u65e5\u5fd7\u200b\u6253\u5370\u51fd\u6570\u200b\n        **kwargs: \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\n    \"\"\"\n    self.code = code\n    self.mapping = TickMapping()\n    self.verbose = verbose\n    self.logger = logger\n    self.kwargs = kwargs\n    self.request_set(description=\"\u200b\u80a1\u7968\u200b\u5b9e\u65f6\u200btick\u200b\u6570\u636e\u200b\")\n</code></pre>"},{"location":"api/stock/valuation/","title":"\u4ef7\u503c\u200b\u5206\u6790","text":""},{"location":"api/stock/valuation/#_2","title":"\u4ef7\u503c\u200b\u5206\u6790\u200b\u76f8\u5173\u200b\u6982\u5ff5","text":"<p>TTM(Trailing Twelve Months)</p> <ul> <li> <p>\u200b\u5b9a\u4e49\u200b: TTM\uff08Trailing Twelve Months\uff09\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u8fc7\u53bb\u200b12\u200b\u4e2a\u200b\u6708\u200b\u7684\u200b\u8d22\u52a1\u6570\u636e\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u516c\u53f8\u8d22\u52a1\u200b\u8868\u73b0\u200b\u7684\u200b\u6700\u65b0\u200b\u60c5\u51b5\u200b\u3002TTM\u200b\u6570\u636e\u200b\u76f8\u8f83\u200b\u4e8e\u200b\u5e74\u5ea6\u62a5\u544a\u200b\u6570\u636e\u200b\u66f4\u5177\u200b\u65f6\u6548\u6027\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u53cd\u6620\u200b\u4e86\u200b\u6700\u8fd1\u200b\u7684\u200b\u8d22\u52a1\u72b6\u51b5\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4ec5\u4ec5\u200b\u662f\u200b\u8fc7\u53bb\u200b\u4e00\u5e74\u200b\u7684\u200b\u6574\u4f53\u200b\u8868\u73b0\u200b\u3002</p> </li> <li> <p>\u200b\u5e94\u7528\u200b: TTM\u200b\u5e38\u7528\u200b\u4e8e\u200b\u591a\u4e2a\u200b\u8d22\u52a1\u6307\u6807\u200b\u7684\u200b\u8ba1\u7b97\u200b\uff1a</p> <ul> <li>PE(TTM): \u200b\u5e02\u76c8\u7387\u200b\uff0c\u200b\u57fa\u4e8e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u7684\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\u3002</li> <li>\u200b\u5e02\u9500\u7387\u200b(TTM): \u200b\u57fa\u4e8e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u7684\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b\u3002</li> <li>\u200b\u5e02\u73b0\u200b\u7387\u200b(TTM): \u200b\u57fa\u4e8e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u7684\u200b\u6bcf\u80a1\u200b\u73b0\u91d1\u6d41\u91cf\u200b\u3002</li> </ul> </li> </ul> <p>PE(TTM)</p> <p>\u200b\u5b9a\u4e49\u200b: PE\uff08\u200b\u5e02\u76c8\u7387\u200b\uff09\u200b\u662f\u200b\u6307\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b\u4e0e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\uff08EPS\uff09\u200b\u603b\u548c\u200b\u7684\u200b\u6bd4\u503c\u200b\u3002</p> \\[PE(TTM)=\\frac{\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b}{\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b(TTM)}\\] <ul> <li>PE(TTM) \u200b\u7528\u4e8e\u200b\u8861\u91cf\u200b\u516c\u53f8\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u5176\u200b\u76c8\u5229\u200b\u80fd\u529b\u200b\u7684\u200b\u9ad8\u4f4e\u200b\u3002</li> <li>\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200bPE\u200b\u53ef\u80fd\u200b\u610f\u5473\u7740\u200b\u80a1\u7968\u200b\u88ab\u200b\u4f4e\u4f30\u200b\uff0c\u200b\u800c\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200bPE\u200b\u53ef\u80fd\u200b\u8868\u793a\u200b\u5e02\u573a\u200b\u5bf9\u200b\u516c\u53f8\u200b\u672a\u6765\u200b\u589e\u957f\u200b\u7684\u200b\u9884\u671f\u200b\u8f83\u200b\u9ad8\u200b\u3002</li> </ul> <p>PE(\u200b\u9759\u200b)</p> <p>\u200b\u5b9a\u4e49\u200b: PE\uff08\u200b\u9759\u6001\u200b\u5e02\u76c8\u7387\u200b\uff09\u200b\u662f\u200b\u6307\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b\u4e0e\u200b\u6700\u65b0\u200b\u5e74\u62a5\u200b\u4e2d\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\u7684\u200b\u6bd4\u503c\u200b\u3002</p> \\[PE(\u200b\u9759\u200b)=\\frac{\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b}{\u200b\u6700\u65b0\u200b\u5e74\u62a5\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b}\\] <ul> <li>\u200b\u8fd9\u4e2a\u200b\u6307\u6807\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200b\u6700\u65b0\u200b\u8d22\u52a1\u6570\u636e\u200b\u7684\u200b\u76c8\u5229\u200b\u80fd\u529b\u200b\u8bc4\u4f30\u200b\u3002</li> <li>\u200b\u5728\u200b\u6bd4\u8f83\u200b\u4e0d\u540c\u200b\u516c\u53f8\u200b\u7684\u200bPE\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u9759\u6001\u200bPE\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u76f4\u63a5\u200b\u53cd\u6620\u200b\u516c\u53f8\u200b\u8d22\u52a1\u72b6\u51b5\u200b\u3002</li> </ul> <p>\u200b\u5e02\u9500\u7387\u200b(TTM)</p> <p>\u200b\u5b9a\u4e49\u200b: \u200b\u5e02\u9500\u7387\u200b\u662f\u200b\u603b\u200b\u5e02\u503c\u200b\u4e0e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b\u603b\u548c\u200b\u7684\u200b\u6bd4\u503c\u200b\u3002</p> \\[\u200b\u5e02\u9500\u7387\u200b(TTM)=\\frac{\u200b\u603b\u200b\u5e02\u503c\u200b}{\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b(TTM)}\\] <ul> <li>\u200b\u5e02\u9500\u7387\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u516c\u53f8\u200b\u9500\u552e\u6536\u5165\u200b\u7684\u200b\u4ef7\u503c\u200b\uff0c\u200b\u5c24\u5176\u200b\u9002\u7528\u200b\u4e8e\u200b\u5c1a\u672a\u200b\u76c8\u5229\u200b\u7684\u200b\u516c\u53f8\u200b\u3002</li> <li>\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u5e02\u200b\u9500\u7387\u200b\u53ef\u80fd\u200b\u8868\u793a\u200b\u516c\u53f8\u200b\u88ab\u200b\u4f4e\u4f30\u200b\uff0c\u200b\u6216\u200b\u5176\u200b\u9500\u552e\u200b\u8868\u73b0\u200b\u4e0d\u4f73\u200b\u3002</li> </ul> <p>\u200b\u603b\u200b\u5e02\u503c\u200b\u4e0e\u200b\u524d\u200b\u56db\u5b63\u5ea6\u200b\u8425\u4e1a\u200b\u6536\u5165\u200b\u603b\u548c\u200b\u7684\u200b\u6bd4\u503c\u200b</p> <p>\u200b\u5e02\u73b0\u200b\u7387\u200b(TTM)</p> <p>\u200b\u5b9a\u4e49\u200b: \u200b\u5e02\u73b0\u200b\u7387\u200b\u662f\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b\u4e0e\u200b\u8fc7\u53bb\u200b\u56db\u4e2a\u200b\u5b63\u5ea6\u200b\u6bcf\u80a1\u200b\u73b0\u91d1\u6d41\u91cf\u200b\u603b\u548c\u200b\u7684\u200b\u6bd4\u503c\u200b\u3002</p> \\[\u200b\u5e02\u73b0\u200b\u7387\u200b(TTM)=\\frac{\u200b\u5f53\u524d\u200b\u80a1\u4ef7\u200b}{\u200b\u6bcf\u80a1\u200b\u73b0\u91d1\u6d41\u91cf\u200b(TTM)}\\] <ul> <li>\u200b\u5e02\u73b0\u200b\u7387\u200b\u8bc4\u4f30\u200b\u516c\u53f8\u200b\u80a1\u4ef7\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u5176\u200b\u73b0\u91d1\u6d41\u200b\u7684\u200b\u4ef7\u503c\u200b\uff0c\u200b\u53cd\u6620\u200b\u4e86\u200b\u516c\u53f8\u200b\u7684\u200b\u73b0\u91d1\u200b\u751f\u6210\u200b\u80fd\u529b\u200b\u3002</li> <li>\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u5e02\u200b\u73b0\u7387\u200b\u53ef\u80fd\u200b\u9884\u793a\u200b\u7740\u200b\u516c\u53f8\u200b\u88ab\u200b\u4f4e\u4f30\u200b\u6216\u200b\u73b0\u91d1\u6d41\u200b\u8868\u73b0\u200b\u826f\u597d\u200b\u3002</li> </ul> <p>PEG\u200b\u503c\u200b</p> <p>\u200b\u5b9a\u4e49\u200b: PEG\u200b\u503c\u200b\u662f\u200bPE(TTM)\u200b\u4e0e\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b\u8fd1\u200b3\u200b\u5e74\u200b\u590d\u5408\u200b\u589e\u957f\u7387\u200b\u7684\u200b\u6bd4\u503c\u200b\u3002</p> \\[PEG=\\frac{PE(TTM)}{EPS\u200b\u590d\u5408\u200b\u5e74\u589e\u957f\u7387\u200b}\\] <ul> <li>PEG\u200b\u503c\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u516c\u53f8\u200b\u6210\u957f\u6027\u200b\u4e0e\u200b\u5f53\u524d\u200b\u4f30\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</li> <li>\u200b\u4e00\u822c\u200b\u8ba4\u4e3a\u200b\uff0cPEG\u200b\u503c\u200b\u5c0f\u4e8e\u200b1\u200b\u8868\u793a\u200b\u516c\u53f8\u200b\u88ab\u200b\u4f4e\u4f30\u200b\uff0c\u200b\u53cd\u4e4b\u200b\u5219\u200b\u53ef\u80fd\u200b\u88ab\u200b\u9ad8\u4f30\u200b\u3002</li> </ul>"},{"location":"api/stock/valuation/#_3","title":"\u5e02\u573a\u200b\u4ef7\u503c\u200b\u5206\u6790","text":"<p>\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b</p> <p>\u200b\u6570\u636e\u200b\u8f93\u51fa\u200b</p>"},{"location":"api/stock/valuation/#_4","title":"\u884c\u4e1a\u200b\u4ef7\u503c\u200b\u5206\u6790","text":"<p>\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b</p> <p>\u200b\u6570\u636e\u200b\u8f93\u51fa\u200b</p>"},{"location":"api/stock/valuation/#_5","title":"\u4e2a\u80a1\u200b\u4ef7\u503c\u200b\u5206\u6790","text":"<p>\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b</p> <p>\u200b\u6570\u636e\u200b\u8f93\u51fa\u200b</p>"},{"location":"api/text/news/","title":"\u65b0\u95fb\u200b\u6570\u636e","text":""},{"location":"api/text/news/#_2","title":"\u83b7\u53d6\u200b\u65b0\u95fb\u200b\u5217\u8868","text":"<p>\u200b\u53ef\u200b\u9009\u62e9\u200b\u65b0\u95fb\u200b\u4e3b\u9898\u200b</p> <p><code>[\"\u200b\u8d22\u7ecf\u200b\u5bfc\u8bfb\u200b\", \"\u200b\u4ea7\u7ecf\u65b0\u95fb\u200b\", \"\u200b\u56fd\u5185\u200b\u7ecf\u6d4e\u200b\", \"\u200b\u56fd\u9645\u200b\u7ecf\u6d4e\u200b\", \"\u200b\u8bc1\u5238\u200b\u805a\u7126\u200b\", \"\u200b\u7eb5\u6df1\u200b\u8c03\u67e5\u200b\", \"\u200b\u7ecf\u6d4e\u200b\u65f6\u8bc4\u200b\", \"\u200b\u4ea7\u4e1a\u200b\u900f\u89c6\u200b\", \"\u200b\u5546\u4e1a\u200b\u89c2\u5bdf\u200b\", \"\u200b\u80a1\u5e02\u200b\u8bc4\u8bba\u200b\", \"\u200b\u5546\u4e1a\u8d44\u8baf\u200b\", \"\u200b\u521b\u4e1a\u200b\u7814\u7a76\u200b\", \"A\u200b\u80a1\u200b\u516c\u53f8\u200b\", \"\u200b\u6e2f\u80a1\u200b\u516c\u53f8\u200b\", \"\u200b\u4e2d\u6982\u200b\u80a1\u200b\u516c\u53f8\u200b\", \"\u200b\u6d77\u5916\u200b\u516c\u53f8\u200b\",]</code></p> <p>\u200b\u793a\u4f8b\u200b</p> <pre><code>from zlai.tools.report.news import *\n\nnews = News(size=20)\ndata = news.load_data()\nprint(data.metadata)\nprint(data.to_frame(columns=data.metadata.get(\"columns\")).to_markdown())\n</code></pre>"},{"location":"api/text/news/#_3","title":"\u83b7\u53d6\u200b\u65b0\u95fb\u200b\u8be6\u60c5","text":"<p>\u200b\u793a\u4f8b\u200b</p> <pre><code>url = \"http://finance.eastmoney.com/news/1344,202409293194209890.html\"\nnews = News(size=10)\ncontent = news.load_content(url)\nprint(content)\n</code></pre>"},{"location":"api/text/news/#_4","title":"\u83b7\u53d6\u200b\u65b0\u95fb\u200b\u4e3b\u9898","text":"<p>\u200b\u793a\u4f8b\u200b</p> <pre><code>from zlai.tools.report.news import *\n\nnews = News(size=10, theme=\"\u200b\u56fd\u9645\u200b\u7ecf\u6d4e\u200b\")\ndata = news.load_data()\nprint(data.metadata)\nprint(data.to_frame(columns=data.metadata.get(\"columns\")))\n</code></pre>"},{"location":"api/text/reports/","title":"\u7814\u62a5\u200b\u6570\u636e","text":""},{"location":"api/text/reports/#_2","title":"\u7814\u62a5\u200b\u5206\u7c7b","text":""},{"location":"api/text/reports/#_3","title":"\u6982\u5ff5\u200b\u677f\u5757","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nmapping = ReportMapping()\nconception = mapping.list_conception()\nprint(conception.to_frame())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    |   bkCode |   fubkCode | bkName     |   publishCode | firstLetter   |\n|---:|---------:|-----------:|:-----------|--------------:|:--------------|\n|  0 |     1179 |        007 | \u200b\u623f\u5c4b\u200b\u68c0\u6d4b\u200b   |        007541 | F             |\n|  1 |      590 |        007 | \u200b\u897f\u90e8\u200b\u5927\u200b\u5f00\u53d1\u200b |        007070 | X             |\n|  2 |     1178 |        007 | AI\u200b\u773c\u955c\u200b     |        007540 | A             |\n|  3 |     1177 |        007 | \u200b\u8363\u8000\u200b\u6982\u5ff5\u200b   |        007539 | R             |\n|  4 |     1176 |        007 | \u200b\u8d22\u7a0e\u200b\u6570\u5b57\u5316\u200b |        007538 | C             |\n</code></pre>"},{"location":"api/text/reports/#_4","title":"\u5730\u57df\u200b\u677f\u5757","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nmapping = ReportMapping()\ndistrict = mapping.list_district()\nprint(district.to_frame())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    |   bkCode |   fubkCode | bkName   |   publishCode | firstLetter   |\n|---:|---------:|-----------:|:---------|--------------:|:--------------|\n|  0 |   778003 |        020 | \u200b\u6e56\u5357\u200b\u677f\u5757\u200b |        020013 | H             |\n|  1 |   778002 |        020 | \u200b\u6e56\u5317\u200b\u677f\u5757\u200b |        020012 | H             |\n|  2 |   778001 |        020 | \u200b\u6cb3\u5357\u200b\u677f\u5757\u200b |        020010 | H             |\n|  3 |   772001 |        020 | \u200b\u91cd\u5e86\u200b\u677f\u5757\u200b |        020031 | C             |\n|  4 |   776003 |        020 | \u200b\u6d59\u6c5f\u200b\u677f\u5757\u200b |        020030 | Z             |\n</code></pre>"},{"location":"api/text/reports/#_5","title":"\u884c\u4e1a\u200b\u677f\u5757","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nmapping = ReportMapping()\nindustry = mapping.list_industry()\nprint(industry.to_frame())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    |   bkCode |   fubkCode | bkName   |   publishCode | firstLetter   |\n|---:|---------:|-----------:|:---------|--------------:|:--------------|\n|  0 |      546 |        016 | \u200b\u73bb\u7483\u200b\u73bb\u7ea4\u200b |        016044 | B             |\n|  1 |      545 |        016 | \u200b\u901a\u7528\u8bbe\u5907\u200b |        016043 | T             |\n|  2 |      539 |        016 | \u200b\u7efc\u5408\u200b\u884c\u4e1a\u200b |        016042 | Z             |\n|  3 |      538 |        016 | \u200b\u5316\u5b66\u200b\u5236\u54c1\u200b |        016041 | H             |\n|  4 |     1046 |        016 | \u200b\u6e38\u620f\u200b     |        016087 | Y             |\n</code></pre>"},{"location":"api/text/reports/#_6","title":"\u7814\u62a5\u200b\u83b7\u53d6","text":""},{"location":"api/text/reports/#_7","title":"\u5238\u5546\u200b\u6668\u62a5","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\ncolumns = [\"orgName\", \"industryName\", \"title\", \"researcher\", \"publishDate\", \"infoCode\"]\nreport = Report(report_type=\"\u200b\u5238\u5546\u200b\u6668\u62a5\u200b\", size=5, begin_time=\"2024-09-23\", end_time=\"2024-09-23\")\ndata = report.load_data()\nprint(data.to_frame()[columns].to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    | orgName              | industryName   | title                 | researcher   | publishDate             | infoCode             |\n|---:|:---------------------|:---------------|:----------------------|:-------------|:------------------------|:---------------------|\n|  0 | \u200b\u56fd\u91d1\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | \u200b\u56fd\u91d1\u6668\u200b\u8baf\u200b              | \u200b\u767d\u6653\u7426\u200b       | 2024-09-23 00:00:00.000 | AP202409231639990463 |\n|  1 | \u200b\u82f1\u5927\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b |                | \u200b\u91d1\u70b9\u200b\u7b56\u7565\u200b\u6668\u62a5\u200b\u2014\u200b\u6bcf\u5468\u200b\u62a5\u544a\u200b | \u200b\u60e0\u7965\u51e4\u200b       | 2024-09-23 00:00:00.000 | AP202409231639990126 |\n|  2 | \u200b\u82f1\u5927\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b |                | \u200b\u91d1\u70b9\u200b\u7b56\u7565\u200b\u6668\u62a5\u200b\u2014\u200b\u6bcf\u65e5\u200b\u62a5\u544a\u200b | \u200b\u60e0\u7965\u51e4\u200b       | 2024-09-23 00:00:00.000 | AP202409231639990118 |\n|  3 | \u200b\u4e1c\u5174\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | \u200b\u4e1c\u5174\u200b\u6668\u62a5\u200b              | \u200b\u7814\u7a76\u6240\u200b       | 2024-09-23 00:00:00.000 | AP202409231639988120 |\n|  4 | \u200b\u5c71\u897f\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | \u200b\u7814\u7a76\u200b\u65e9\u200b\u89c2\u70b9\u200b            | \u200b\u674e\u53ec\u200b\u9e92\u200b       | 2024-09-23 00:00:00.000 | AP202409231639982347 |\n</code></pre>"},{"location":"api/text/reports/#_8","title":"\u7b56\u7565\u200b\u62a5\u544a","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\ncolumns = [\"orgName\", \"industryName\", \"title\", \"researcher\", \"publishDate\", \"infoCode\"]\nreport = Report(report_type=\"\u200b\u7b56\u7565\u200b\u62a5\u544a\u200b\", size=5, begin_time=\"2024-09-23\", end_time=\"2024-09-23\")\ndata = report.load_data()\nprint(data.to_frame()[columns].to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    | orgName              | industryName   | title                                                                                        | researcher   | publishDate             | infoCode             |\n|---:|:---------------------|:---------------|:---------------------------------------------------------------------------------------------|:-------------|:------------------------|:---------------------|\n|  0 | \u200b\u56fd\u4fe1\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | \u200b\u7b56\u7565\u200b\u5468\u200b\u601d\u8003\u200b\uff1a\u200b\u7b51\u5e95\u200b\u53cd\u5f39\u200b\u540e\u200b\uff0c\u200b\u8be5\u200b\u5173\u6ce8\u200b\u4ec0\u4e48\u200b\uff1f                                                         | \u200b\u9648\u51ef\u7545\u200b,\u200b\u738b\u5f00\u200b  | 2024-09-23 00:00:00.000 | AP202409231639991903 |\n|  1 | \u200b\u56fd\u91d1\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | A\u200b\u80a1\u200b\u6295\u8d44\u200b\u7b56\u7565\u200b\u5468\u62a5\u200b\uff1a\u200b\u7f8e\u56fd\u200b\u7ecf\u6d4e\u200b\u82e5\u200b\u786e\u8ba4\u200b\u201c\u200b\u786c\u7740\u9646\u200b\u201d\uff0c\u200b\u4e0b\u4e2a\u200b\u98ce\u9669\u200b\u5c06\u200b\u662f\u200b\u201c\u200b\u503a\u52a1\u200b\u8fdd\u7ea6\u200b\u201d                              | \u200b\u5f20\u5f1b\u200b         | 2024-09-23 00:00:00.000 | AP202409231639990462 |\n|  2 | \u200b\u5e02\u503c\u200b\u98ce\u4e91\u200b             |                | \u200b\u81ea\u8be9\u200b\u884c\u4e1a\u200b\u9886\u5148\u200b\uff0c\u200b\u5e02\u5360\u7387\u200b\u4e0d\u8db3\u200b1%\uff01\u200b\u91d1\u9675\u200b\u4f53\u80b2\u200b\uff1a\u200b\u4e0a\u5e02\u200b\u4e03\u5e74\u200b\u4ec5\u200b\u8d5a\u200b3\u200b\u4ebf\u200b\uff0c\u200b\u674e\u8001\u677f\u200b\u6c89\u8ff7\u200b\u77ed\u7ebf\u4ea4\u6613\u200b\u548c\u200b\u8fdd\u89c4\u200b\u51cf\u6301\u200b          | \u200b\u767d\u732b\u200b         | 2024-09-23 00:00:00.000 | AP202409231639987575 |\n|  3 | \u200b\u5e02\u503c\u200b\u98ce\u4e91\u200b             |                | \u200b\u6252\u7a83\u200b\u5bf9\u624b\u200b\u5546\u4e1a\u200b\u6570\u636e\u200b\uff0c\u200b\u521b\u59cb\u4eba\u200b\u83b7\u5211\u200b\u9690\u9000\u200b\u5e55\u540e\u200b\uff0c\u200b\u5143\u5149\u200b\u79d1\u6280\u200b\uff1a\u200b\u9ad8\u5ea6\u200b\u4f9d\u8d56\u200b\u201c\u200b\u8f66\u6765\u200b\u4e86\u200b\u201dAPP\uff0c\u200b\u6e2f\u80a1\u200bIPO\u200b\u662f\u200b\u8d77\u70b9\u200b\u8fd8\u662f\u200b\u7ec8\u70b9\u200b\uff1f | \u200b\u5e03\u5076\u200b         | 2024-09-23 00:00:00.000 | AP202409231639987574 |\n|  4 | \u200b\u4e2d\u539f\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b |                | \u200b\u5e02\u573a\u200b\u5206\u6790\u200b\uff1a\u200b\u94f6\u884c\u200b\u901a\u4fe1\u200b\u884c\u4e1a\u200b\u9886\u6da8\u200b A\u200b\u80a1\u200b\u5c0f\u5e45\u200b\u4e0a\u6da8\u200b                                                       | \u200b\u5f20\u521a\u200b         | 2024-09-23 00:00:00.000 | AP202409231639986547 |\n</code></pre>"},{"location":"api/text/reports/#_9","title":"\u4e2a\u80a1\u200b\u7814\u62a5","text":"<p>\u200b\u4ee3\u7801\u200b</p> <ul> <li><code>:param code:</code> \u200b\u80a1\u7968\u4ee3\u7801\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u4e2a\u80a1\u200b\u7b5b\u9009\u200b</li> </ul> <pre><code>from zlai.tools.report import *\n\ncolumns = [\"orgName\", \"stockCode\", \"stockName\", \"title\", \"researcher\", \"publishDate\", \"infoCode\"]\nreport = Report(code=\"002222\", report_type=\"\u200b\u4e2a\u80a1\u200b\u7814\u62a5\u200b\", size=5, begin_time=\"2024-09-23\", end_time=\"2024-09-23\")\ndata = report.load_data()\nprint(data.to_frame()[columns].to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    | orgName              |   stockCode | stockName   | title                                                | researcher   | publishDate             | infoCode             |\n|---:|:---------------------|------------:|:------------|:-----------------------------------------------------|:-------------|:------------------------|:---------------------|\n|  0 | \u200b\u534e\u946b\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b |      002222 | \u200b\u798f\u6676\u200b\u79d1\u6280\u200b    | \u200b\u516c\u53f8\u200b\u4e8b\u4ef6\u200b\u70b9\u8bc4\u200b\u62a5\u544a\u200b\uff1a\u200b\u4e1a\u7ee9\u200b\u73af\u6bd4\u200b\u6539\u5584\u200b\uff0c\u200b\u4e0d\u65ad\u4e30\u5bcc\u200b\u4ea7\u54c1\u200b\u77e9\u9635\u200b\u4f53\u7cfb\u200b | \u200b\u6bdb\u6b63\u200b,\u200b\u5f20\u7490\u200b    | 2024-09-23 00:00:00.000 | AP202409231639992204 |\n</code></pre>"},{"location":"api/text/reports/#_10","title":"\u5b8f\u89c2\u200b\u7814\u7a76","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\ncolumns = [\"orgName\", \"title\", \"researcher\", \"publishDate\", \"infoCode\"]\nreport = Report(report_type=\"\u200b\u5b8f\u89c2\u200b\u7814\u7a76\u200b\", size=5, begin_time=\"2024-09-23\", end_time=\"2024-09-23\")\ndata = report.load_data()\nprint(data.to_frame()[columns].to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    | orgName                  | title                                                      | researcher                | publishDate             | infoCode             |\n|---:|:-------------------------|:-----------------------------------------------------------|:--------------------------|:------------------------|:---------------------|\n|  0 | \u200b\u82f1\u5927\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b     | \u200b\u82f1\u5927\u200b\u5b8f\u89c2\u200b\u70b9\u8bc4\u200b\uff082024\u200b\u5e74\u200b\u7b2c\u200b3\u200b\u671f\u200b\uff0c\u200b\u603b\u7b2c\u200b3\u200b\u671f\u200b\uff09\uff1a\u200b\u7f8e\u8054\u50a8\u200b\u5982\u671f\u200b\u964d\u606f\u200b       | \u200b\u90d1\u7f61\u200b                      | 2024-09-23 00:00:00.000 | AP202409231639990403 |\n|  1 | \u200b\u534e\u91d1\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b     | \u200b\u8d22\u653f\u200b\u6570\u636e\u200b\u70b9\u8bc4\u200b\uff082024.8\uff09\uff1a\u200b\u5730\u65b9\u5316\u200b\u503a\u200b\u901f\u5ea6\u200b\u8d8a\u200b\u5feb\u200b\uff0c\u200b\u4e2d\u592e\u200b\u6269\u5f20\u200b\u7a7a\u95f4\u200b\u8d8a\u5927\u200b | \u200b\u79e6\u6cf0\u200b                      | 2024-09-23 00:00:00.000 | AP202409231639990119 |\n|  2 | \u200b\u5929\u98ce\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b     | \u200b\u5b8f\u89c2\u200b\uff1a\u200b\u9884\u671f\u200b\u843d\u7a7a\u200b\u540e\u200b\u7684\u200b\u8d27\u5e01\u200b\u548c\u200b\u8d22\u653f\u653f\u7b56\u200b\u65b9\u5411\u200b                       | \u200b\u5b8b\u96ea\u6d9b\u200b                    | 2024-09-23 00:00:00.000 | AP202409231639989657 |\n|  3 | \u200b\u6d77\u901a\u200b\u56fd\u9645\u200b\u8bc1\u5238\u200b\u96c6\u56e2\u200b\u6709\u9650\u516c\u53f8\u200b | \u200b\u6d77\u5916\u200b\u7ecf\u6d4e\u200b\u653f\u7b56\u200b\u8ddf\u8e2a\u200b\uff1a\u200b\u7f8e\u8054\u50a8\u200b\u5f00\u542f\u200b\u964d\u606f\u200b\uff0c\u200b\u65e5\u200b\u592e\u884c\u200b\u6309\u5175\u4e0d\u52a8\u200b           | Zhonghua Liang,Amber Zhou | 2024-09-23 00:00:00.000 | AP202409231639988174 |\n|  4 | \u200b\u9ea6\u9ad8\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b     | \u200b\u5b8f\u89c2\u200b\u5e02\u573a\u200b\u5468\u62a5\u200b                                               | \u200b\u5f90\u6ee2\u200b                      | 2024-09-23 00:00:00.000 | AP202409231639987095 |\n</code></pre>"},{"location":"api/text/reports/#_11","title":"\u884c\u4e1a\u200b\u7814\u62a5","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\ncolumns = [\"orgName\", \"industryName\", \"title\", \"researcher\", \"publishDate\", \"infoCode\"]\nreport = Report(report_type=\"\u200b\u884c\u4e1a\u200b\u7814\u62a5\u200b\", industry_code=\"451\", size=5, begin_time=\"2024-09-23\", end_time=\"2024-09-23\")\ndata = report.load_data()\nprint(data.to_frame()[columns].to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|---:|:---------------------|:---------------|---------------:|:-------------------------------------------------------------------------|:--------------------------|:------------------------|:---------------------|\n|  0 | \u200b\u534e\u798f\u200b\u8bc1\u5238\u200b\u6709\u9650\u8d23\u4efb\u200b\u516c\u53f8\u200b | \u200b\u623f\u5730\u4ea7\u200b\u5f00\u53d1\u200b     |            451 | \u200b\u623f\u5730\u4ea7\u200b\u65e5\u62a5\u200b\uff1a\u200b\u6c5f\u82cf\u200b13\u200b\u5e02\u5747\u200b\u5efa\u7acb\u200b\u623f\u7968\u200b\u5b89\u7f6e\u200b\u4f53\u7cfb\u200b                                   | \u200b\u9648\u7acb\u200b,\u200b\u4e8e\u200b\u6021\u7136\u200b               | 2024-09-23 00:00:00.000 | AP202409231639991919 |\n|  1 | \u200b\u56fd\u4fe1\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b | \u200b\u623f\u5730\u4ea7\u200b\u5f00\u53d1\u200b     |            451 | \u200b\u623f\u5730\u4ea7\u200b\u884c\u4e1a\u200b2024\u200b\u5e74\u200b10\u200b\u6708\u200b\u6295\u8d44\u200b\u7b56\u7565\u200b\u66a8\u200b\u4e2d\u62a5\u200b\u603b\u7ed3\u200b\uff1a\u200b\u57fa\u672c\u9762\u200b\u96be\u8a00\u200b\u597d\u8f6c\u200b\uff0c\u200b\u535a\u5f08\u200b\u673a\u4f1a\u200b\u4ecd\u200b\u9700\u200b\u89c2\u5bdf\u200b | \u200b\u4efb\u9e64\u200b,\u200b\u738b\u7ca4\u96f7\u200b,\u200b\u738b\u9759\u200b          | 2024-09-23 00:00:00.000 | AP202409231639986335 |\n|  2 | \u200b\u4e1c\u5174\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b | \u200b\u623f\u5730\u4ea7\u200b\u5f00\u53d1\u200b     |            451 | \u200b\u623f\u5730\u4ea7\u200b\u884c\u4e1a\u200b\u5468\u62a5\u200b\uff1a\u200b\u65b0\u623f\u200b\u9500\u552e\u200b\u7ee7\u7eed\u200b\u4e0b\u884c\u200b\uff0c\u200b\u6700\u9ad8\u200b\u6cd5\u200b\u53d1\u6587\u200b\u652f\u6301\u200b\u201c\u200b\u767d\u540d\u5355\u200b\u9879\u76ee\u200b\u201d\u200b\u878d\u8d44\u200b\u4ea4\u4ed8\u200b     | \u200b\u9648\u521a\u200b                      | 2024-09-23 00:00:00.000 | AP202409231639985943 |\n|  3 | \u200b\u5f00\u6e90\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b | \u200b\u623f\u5730\u4ea7\u200b\u5f00\u53d1\u200b     |            451 | \u200b\u623f\u5730\u4ea7\u200b\u884c\u4e1a\u200b\u70b9\u8bc4\u200b\u62a5\u544a\u200b\uff1a\u200b\u8fc7\u5f80\u200b\u53ef\u9274\u200b\uff0c\u200b\u5b58\u91cf\u200b\u623f\u8d37\u200b\u964d\u606f\u200b\u7fd8\u9996\u200b\u800c\u671b\u200b                       | \u200b\u9f50\u4e1c\u200b                      | 2024-09-23 00:00:00.000 | AP202409231639977137 |\n|  4 | \u200b\u4e2d\u200b\u6cf0\u200b\u8bc1\u5238\u200b\u80a1\u4efd\u200b\u6709\u9650\u516c\u53f8\u200b | \u200b\u623f\u5730\u4ea7\u200b\u5f00\u53d1\u200b     |            451 | \u200b\u623f\u5730\u4ea7\u200b\u884c\u4e1a\u200b\u7814\u7a76\u200b\u5468\u62a5\u200b\uff1a\u200b\u6210\u4ea4\u200b\u7ef4\u6301\u200b\u4f4e\u4f4d\u200b\uff0c\u200b\u5317\u4eac\u200b\u53d6\u6d88\u200b\u666e\u5b85\u200b\u4e0e\u975e\u200b\u666e\u5b85\u200b\u8ba4\u5b9a\u200b\u6807\u51c6\u200b           | \u200b\u7531\u5b50\u6c9b\u200b,\u200b\u674e\u200b\u579a\u200b,\u200b\u4faf\u5e0c\u5f97\u200b,\u200b\u9648\u5e0c\u745e\u200b | 2024-09-23 00:00:00.000 | AP202409231639975114 |\n</code></pre>"},{"location":"api/text/reports/#_12","title":"\u76c8\u5229\u200b\u5206\u6790\u200b\u62a5\u544a","text":""},{"location":"api/text/reports/#_13","title":"\u83b7\u53d6\u200b\u5168\u90e8\u200b\u76c8\u5229\u200b\u9884\u6d4b","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nreport = ProfitForecast(size=2)\ndata = report.load_data()\ncolumns = data.metadata.get(\"columns\")\nprint(data.to_frame(columns=columns).to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|    | \u200b\u80a1\u7968\u4ee3\u7801\u200b   |   \u200b\u8bc1\u5238\u200b\u4ee3\u7801\u200b | \u200b\u8bc1\u5238\u200b\u7b80\u79f0\u200b   |   \u200b\u8bc4\u7ea7\u200b\u673a\u6784\u200b\u6570\u91cf\u200b |   \u200b\u4e70\u5165\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b |   \u200b\u589e\u6301\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b | \u200b\u4e2d\u6027\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b   | \u200b\u51cf\u6301\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b   | \u200b\u5356\u51fa\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b   |   \u200b\u7b2c\u4e00\u5e74\u200b | \u200b\u7b2c\u4e00\u5e74\u200b\u6807\u8bb0\u200b   |   \u200b\u7b2c\u4e00\u5e74\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b |   \u200b\u7b2c\u4e8c\u5e74\u200b | \u200b\u7b2c\u4e8c\u5e74\u200b\u6807\u8bb0\u200b   |   \u200b\u7b2c\u4e8c\u5e74\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b |   \u200b\u7b2c\u4e09\u5e74\u200b | \u200b\u7b2c\u4e09\u5e74\u200b\u6807\u8bb0\u200b   |   \u200b\u7b2c\u4e09\u5e74\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b |   \u200b\u7b2c\u56db\u5e74\u200b | \u200b\u7b2c\u56db\u5e74\u200b\u6807\u8bb0\u200b   |   \u200b\u7b2c\u56db\u5e74\u200b\u6bcf\u80a1\u200b\u6536\u76ca\u200b | \u200b\u884c\u4e1a\u200b\u677f\u5757\u200b   | \u200b\u6df1\u8bc1\u200b\u884c\u4e1a\u200b\u677f\u5757\u200b   | \u200b\u6982\u5ff5\u200b\u6307\u6570\u200b\u677f\u5757\u200b                                                                                                                                          | \u200b\u6df1\u8bc1\u200b\u6982\u5ff5\u200b\u6307\u6570\u200b\u677f\u5757\u200b                    | \u200b\u533a\u57df\u200b\u677f\u5757\u200b   | \u200b\u6df1\u8bc1\u200b\u533a\u57df\u200b\u677f\u5757\u200b   |     \u200b\u5e02\u573a\u200b\u677f\u5757\u200b |   \u200b\u76ee\u6807\u200b\u6700\u9ad8\u4ef7\u200b |   \u200b\u76ee\u6807\u200b\u6700\u4f4e\u4ef7\u200b |   \u200b\u957f\u671f\u200b\u8bc4\u7ea7\u200b\u6570\u91cf\u200b |\n|---:|:-----------|-----------:|:-----------|---------------:|---------------:|---------------:|:---------------|:---------------|:---------------|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|:-----------|:---------------|:------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------|:-----------|:---------------|-------------:|-------------:|-------------:|---------------:|\n|  0 | 600519.SH  |     600519 | \u200b\u8d35\u5dde\u200b\u8305\u53f0\u200b   |             57 |             47 |             10 |                |                |                |     2023 | A            |         59.4923  |     2024 | E            |         69.2585  |     2025 | E            |         79.2465  |     2026 | E            |         89.9783  | \u200b\u917f\u9152\u200b\u884c\u4e1a\u200b   | N              | HS300_,MSCI\u200b\u4e2d\u56fd\u200b,\u200b\u767d\u9152\u200b,\u200b\u767e\u5143\u200b\u80a1\u200b,\u200b\u6807\u51c6\u200b\u666e\u5c14\u200b,\u200b\u8d85\u7ea7\u200b\u54c1\u724c\u200b,\u200b\u7535\u5546\u200b\u6982\u5ff5\u200b,\u200b\u5bcc\u65f6\u200b\u7f57\u7d20\u200b,\u200b\u56fd\u4f01\u6539\u9769\u200b,\u200b\u6caa\u200b\u80a1\u901a\u200b,\u200b\u673a\u6784\u200b\u91cd\u4ed3\u200b,\u200b\u8305\u200b\u6307\u6570\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u4e0a\u8bc1\u200b180_,\u200b\u4e0a\u8bc1\u200b50_,\u200b\u897f\u90e8\u200b\u5927\u200b\u5f00\u53d1\u200b,\u200b\u592e\u89c6\u200b50_,\u200b\u8bc1\u91d1\u200b\u6301\u80a1\u200b | H,M,B,B,B,C,D,F,G,H,J,M,R,S,S,X,Y,Z | \u200b\u8d35\u5dde\u200b\u677f\u5757\u200b   | G              | 069001001001 |      2600    |      1674    |             57 |\n|  1 | 603605.SH  |     603605 | \u200b\u73c0\u83b1\u96c5\u200b     |             52 |             40 |             12 |                |                |                |     2023 | A            |          3.00906 |     2024 | E            |          3.92042 |     2025 | E            |          4.85173 |     2026 | E            |          5.87592 | \u200b\u7f8e\u5bb9\u200b\u62a4\u7406\u200b   | M              | MSCI\u200b\u4e2d\u56fd\u200b,QFII\u200b\u91cd\u4ed3\u200b,\u200b\u767e\u5143\u200b\u80a1\u200b,\u200b\u7535\u5546\u200b\u6982\u5ff5\u200b,\u200b\u5bcc\u65f6\u200b\u7f57\u7d20\u200b,\u200b\u6caa\u200b\u80a1\u901a\u200b,\u200b\u5316\u5986\u54c1\u200b\u6982\u5ff5\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u4e0a\u8bc1\u200b180_,\u200b\u8f6c\u503a\u200b\u6807\u7684\u200b,\u200b\u6628\u65e5\u200b\u89e6\u677f\u200b                                                      | M,Q,B,D,F,H,H,R,S,Z,Z               | \u200b\u6d59\u6c5f\u200b\u677f\u5757\u200b   | Z              | 069001001001 |       149.72 |        99.97 |             52 |\n</code></pre>"},{"location":"api/text/reports/#_14","title":"\u83b7\u53d6\u200b\u67d0\u200b\u884c\u4e1a\u200b\u76c8\u5229\u200b\u9884\u6d4b","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nreport = ProfitForecast(industry=\"\u200b\u7535\u6e90\u200b\u8bbe\u5907\u200b\", size=5)\ndata = report.load_data()\ncolumns = data.metadata.get(\"columns\")\nprint(data.to_frame(columns=columns).to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|---:|:-----------|-----------:|:-----------|---------------:|---------------:|---------------:|:---------------|:---------------|:---------------|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|:-----------|:---------------|:------------------------------------------------------------------------------------------------------------|:--------------------------|:-----------|:---------------|-------------:|-------------:|-------------:|---------------:|\n|  0 | 300693.SZ  |     300693 | \u200b\u76db\u5f18\u200b\u80a1\u4efd\u200b   |             21 |             13 |              8 |                |                |                |     2023 | A            |          1.29491 |     2024 | E            |          1.57714 |     2025 | E            |          2.12571 |     2026 | E            |          2.76947 | \u200b\u7535\u6e90\u200b\u8bbe\u5907\u200b   | D              | \u200b\u5145\u7535\u200b\u6869\u200b,\u200b\u50a8\u80fd\u200b,\u200b\u521b\u4e1a\u677f\u200b\u7efc\u200b,\u200b\u9ad8\u9001\u200b\u8f6c\u200b,\u200b\u9ad8\u538b\u200b\u5feb\u5145\u200b,\u200b\u57fa\u91d1\u200b\u91cd\u4ed3\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u6df1\u80a1\u901a\u200b,\u200b\u6df1\u5733\u7279\u533a\u200b,\u200b\u6570\u636e\u4e2d\u5fc3\u200b,\u200b\u4e13\u7cbe\u200b\u7279\u65b0\u200b                    | C,C,C,G,G,J,R,S,S,S,Z     | \u200b\u5e7f\u4e1c\u200b\u677f\u5757\u200b   | G              | 069001002002 |        44.88 |        27.87 |             21 |\n|  1 | 300820.SZ  |     300820 | \u200b\u82f1\u6770\u200b\u7535\u6c14\u200b   |             14 |             12 |              2 |                |                |                |     2023 | A            |          1.94709 |     2024 | E            |          2.71214 |     2025 | E            |          3.45786 |     2026 | E            |          4.25    | \u200b\u7535\u6e90\u200b\u8bbe\u5907\u200b   | D              | PLC\u200b\u6982\u5ff5\u200b,\u200b\u534a\u5bfc\u4f53\u200b\u6982\u5ff5\u200b,\u200b\u5145\u7535\u200b\u6869\u200b,\u200b\u50a8\u80fd\u200b,\u200b\u521b\u4e1a\u677f\u200b\u7efc\u200b,\u200b\u7b2c\u4e09\u4ee3\u200b\u534a\u5bfc\u4f53\u200b,\u200b\u9ad8\u9001\u200b\u8f6c\u200b,\u200b\u519b\u5de5\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u6df1\u80a1\u901a\u200b,\u200b\u592a\u9633\u80fd\u200b,\u200b\u897f\u90e8\u200b\u5927\u200b\u5f00\u53d1\u200b,\u200b\u4e13\u7cbe\u200b\u7279\u65b0\u200b | P,B,C,C,C,D,G,J,R,S,T,X,Z | \u200b\u56db\u5ddd\u200b\u677f\u5757\u200b   | S              | 069001002002 |        60.1  |        42.8  |             14 |\n</code></pre>"},{"location":"api/text/reports/#_15","title":"\u83b7\u53d6\u200b\u67d0\u200b\u6982\u5ff5\u200b\u76c8\u5229\u200b\u9884\u6d4b","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nreport = ProfitForecast(conception=\"\u200b\u9ad8\u538b\u200b\u5feb\u5145\u200b\", size=5)\ndata = report.load_data()\ncolumns = data.metadata.get(\"columns\")\nprint(data.to_frame(columns=columns).to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|---:|:-----------|-----------:|:-----------|---------------:|---------------:|---------------:|:---------------|:---------------|:---------------|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|:-----------|:---------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------|:-----------|:---------------|-------------:|-------------:|-------------:|---------------:|\n|  0 | 600699.SH  |     600699 | \u200b\u5747\u200b\u80dc\u200b\u7535\u5b50\u200b   |             22 |             15 |              7 |                |                |                |     2023 | A            |         0.768929 |     2024 | E            |          1.03264 |     2025 | E            |          1.34509 |     2026 | E            |          1.62432 | \u200b\u6c7d\u8f66\u200b\u96f6\u90e8\u4ef6\u200b | Q              | 2025\u200b\u89c4\u5212\u200b,MSCI\u200b\u4e2d\u56fd\u200b,\u200b\u6807\u51c6\u200b\u666e\u5c14\u200b,\u200b\u8f66\u200b\u8054\u7f51\u200b(\u200b\u8f66\u8def\u200b\u4e91\u200b),\u200b\u5145\u7535\u200b\u6869\u200b,\u200b\u5bcc\u65f6\u200b\u7f57\u7d20\u200b,\u200b\u9ad8\u538b\u200b\u5feb\u5145\u200b,\u200b\u6caa\u200b\u80a1\u901a\u200b,\u200b\u534e\u4e3a\u200b\u6982\u5ff5\u200b,\u200b\u534e\u4e3a\u200b\u6c7d\u8f66\u200b,\u200b\u673a\u6784\u200b\u91cd\u4ed3\u200b,\u200b\u6fc0\u5149\u96f7\u8fbe\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u4e0a\u8bc1\u200b380,\u200b\u7279\u65af\u62c9\u200b,\u200b\u65e0\u4eba\u9a7e\u9a76\u200b,\u200b\u65e0\u7ebf\u200b\u5145\u7535\u200b,\u200b\u65b0\u80fd\u6e90\u200b\u8f66\u200b,\u200b\u82f1\u200b\u4f1f\u8fbe\u200b\u6982\u5ff5\u200b,\u200b\u667a\u80fd\u200b\u673a\u5668\u200b,\u200b\u4e2d\u8bc1\u200b500 | G,M,B,C,C,F,G,H,H,H,J,J,R,S,T,W,W,X,Y,Z,Z | \u200b\u6d59\u6c5f\u200b\u677f\u5757\u200b   | Z              | 069001001001 |        26.26 |        20    |             22 |\n|  1 | 300693.SZ  |     300693 | \u200b\u76db\u5f18\u200b\u80a1\u4efd\u200b   |             21 |             13 |              8 |                |                |                |     2023 | A            |         1.29491  |     2024 | E            |          1.57714 |     2025 | E            |          2.12571 |     2026 | E            |          2.76947 | \u200b\u7535\u6e90\u200b\u8bbe\u5907\u200b   | D              | \u200b\u5145\u7535\u200b\u6869\u200b,\u200b\u50a8\u80fd\u200b,\u200b\u521b\u4e1a\u677f\u200b\u7efc\u200b,\u200b\u9ad8\u9001\u200b\u8f6c\u200b,\u200b\u9ad8\u538b\u200b\u5feb\u5145\u200b,\u200b\u57fa\u91d1\u200b\u91cd\u4ed3\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u6df1\u80a1\u901a\u200b,\u200b\u6df1\u5733\u7279\u533a\u200b,\u200b\u6570\u636e\u4e2d\u5fc3\u200b,\u200b\u4e13\u7cbe\u200b\u7279\u65b0\u200b                                                                                                     | C,C,C,G,G,J,R,S,S,S,Z                     | \u200b\u5e7f\u4e1c\u200b\u677f\u5757\u200b   | G              | 069001002002 |        44.88 |        27.87 |             21 |\n</code></pre>"},{"location":"api/text/reports/#_16","title":"\u83b7\u53d6\u200b\u67d0\u200b\u5730\u533a\u200b\u76c8\u5229\u200b\u9884\u6d4b","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nreport = ProfitForecast(district=\"\u200b\u5317\u4eac\u200b\u677f\u5757\u200b\", size=5)\ndata = report.load_data()\ncolumns = data.metadata.get(\"columns\")\nprint(data.to_frame(columns=columns).to_markdown())\n</code></pre> <p>\u200b\u6570\u636e\u200b</p> <pre><code>|---:|:-----------|-----------:|:-----------|---------------:|---------------:|---------------:|:---------------|:---------------|:---------------|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|---------:|:-------------|-----------------:|:-----------|:---------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------|:-----------|:---------------|-------------:|-------------:|-------------:|---------------:|\n|  0 | 688111.SH  |     688111 | \u200b\u91d1\u5c71\u200b\u529e\u516c\u200b   |             44 |             34 |             10 |                |                |                |     2023 | A            |          2.849   |     2024 | E            |          3.39153 |     2025 | E            |            4.301 |     2026 | E            |          5.47064 | \u200b\u8f6f\u4ef6\u5f00\u53d1\u200b   | R              | HS300_,Kimi\u200b\u6982\u5ff5\u200b,MSCI\u200b\u4e2d\u56fd\u200b,\u200b\u767e\u5143\u200b\u80a1\u200b,\u200b\u56fd\u4ea7\u8f6f\u4ef6\u200b,\u200b\u6caa\u200b\u80a1\u901a\u200b,\u200b\u57fa\u91d1\u200b\u91cd\u4ed3\u200b,\u200b\u79d1\u521b\u677f\u200b\u505a\u200b\u5e02\u80a1\u200b,\u200b\u8305\u200b\u6307\u6570\u200b,\u200b\u4eba\u5de5\u667a\u80fd\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u4e0a\u8bc1\u200b180_,\u200b\u4e0a\u8bc1\u200b50_,\u200b\u4fe1\u521b\u200b,\u200b\u8fdc\u7a0b\u200b\u529e\u516c\u200b                                     | H,K,M,B,G,H,J,K,M,R,R,S,S,X,Y       | \u200b\u5317\u4eac\u200b\u677f\u5757\u200b   | B              | 069001001006 |        399   |       228.53 |             44 |\n|  1 | 300896.SZ  |     300896 | \u200b\u7231\u7f8e\u200b\u5ba2\u200b     |             42 |             30 |             12 |                |                |                |     2023 | A            |          6.14499 |     2024 | E            |          8.55057 |     2025 | E            |           10.919 |     2026 | E            |         13.5835  | \u200b\u7f8e\u5bb9\u200b\u62a4\u7406\u200b   | M              | HS300_,MSCI\u200b\u4e2d\u56fd\u200b,\u200b\u767e\u5143\u200b\u80a1\u200b,\u200b\u521b\u4e1a\u677f\u200b\u7efc\u200b,\u200b\u521b\u4e1a\u200b\u6210\u4efd\u200b,\u200b\u5316\u5986\u54c1\u200b\u6982\u5ff5\u200b,\u200b\u57fa\u91d1\u200b\u91cd\u4ed3\u200b,\u200b\u51cf\u80a5\u836f\u200b,\u200b\u8305\u200b\u6307\u6570\u200b,\u200b\u5b81\u200b\u7ec4\u5408\u200b,\u200b\u878d\u8d44\u200b\u878d\u5238\u200b,\u200b\u6df1\u6210\u200b500,\u200b\u6df1\u80a1\u901a\u200b,\u200b\u6df1\u8bc1\u200b100R,\u200b\u533b\u7597\u200b\u7f8e\u5bb9\u200b,\u200b\u533b\u7597\u5668\u68b0\u200b\u6982\u5ff5\u200b,\u200b\u6628\u65e5\u200b\u6da8\u505c\u200b,\u200b\u6628\u65e5\u200b\u6da8\u505c\u200b_\u200b\u542b\u4e00\u5b57\u200b | H,M,B,C,C,H,J,J,M,N,R,S,S,S,Y,Y,Z,Z | \u200b\u5317\u4eac\u200b\u677f\u5757\u200b   | B              | 069001002002 |        429.3 |       189    |             42 |\n</code></pre>"},{"location":"api/text/reports/#_17","title":"\u8d22\u7ecf\u200b\u7814\u62a5\u200b(Editing)","text":""},{"location":"api/text/reports/#_18","title":"\u7814\u62a5\u200b\u4f7f\u7528","text":""},{"location":"api/text/reports/#pdf","title":"\u4fdd\u5b58\u200b\u4e3a\u200b\u672c\u5730\u200bPDF","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\n\nreport = Report(\n    report_type=\"\u200b\u884c\u4e1a\u200b\u7814\u62a5\u200b\", industry_code=\"451\", size=5, begin_time=\"2024-09-23\",\n    end_time=\"2024-09-23\")\nreport.save_pdf(report_code=[\"AP202409231639991919\"], path=\"../fund/\")\n</code></pre>"},{"location":"api/text/reports/#bytes","title":"\u8bfb\u53d6\u200b\u4e3a\u200b<code>bytes</code>\u200b\u8fdb\u884c\u200b\u6587\u672c\u200b\u5206\u6790","text":"<p>\u200b\u4ee3\u7801\u200b</p> <pre><code>from zlai.tools.report import *\nfrom zlai.documents.pdf import ReadPDF\n\nreport = Report()\npdf_bytes = report.load_pdf_bytes(report_code=[\"AP202409231639991919\"])\n\ncode, stream = pdf_bytes[0]\npdf = ReadPDF(stream=stream)\nfor page in pdf.documents:\n    print(\"metadata: \", page.metadata)\n    print(\"content: \", page.page_content)\n    print(\"image: \", page.page_images[0])\n    break\n</code></pre> <p>\u200b\u7ed3\u679c\u200b</p> <pre><code>metadata: {'path': None, 'page_number': 0, 'image_num': 2}\ncontent:  &lt;\u200b\u62a5\u544a\u200b\u6587\u672c\u200b\u7701\u7565\u200b&gt;\nimage:  &lt;\u200b\u56fe\u7247\u200b\u7701\u7565\u200b&gt;\n</code></pre> <p></p>"},{"location":"blog/","title":"Blog","text":""}]}